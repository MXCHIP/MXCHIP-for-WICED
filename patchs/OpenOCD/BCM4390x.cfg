#
# Copyright 2016, Cypress Semiconductor Corporation or a subsidiary of 
 # Cypress Semiconductor Corporation. All Rights Reserved.
 # This software, including source code, documentation and related
 # materials ("Software"), is owned by Cypress Semiconductor Corporation
 # or one of its subsidiaries ("Cypress") and is protected by and subject to
 # worldwide patent protection (United States and foreign),
 # United States copyright laws and international treaty provisions.
 # Therefore, you may use this Software only as provided in the license
 # agreement accompanying the software package from which you
 # obtained this Software ("EULA").
 # If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 # non-transferable license to copy, modify, and compile the Software
 # source code solely for use in connection with Cypress's
 # integrated circuit products. Any reproduction, modification, translation,
 # compilation, or representation of this Software except as specified
 # above is prohibited without the express written permission of Cypress.
 #
 # Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 # EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
 # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
 # reserves the right to make changes to the Software without notice. Cypress
 # does not assume any liability arising out of the application or use of the
 # Software or any product or circuit described in the Software. Cypress does
 # not authorize its products for use in any products where a malfunction or
 # failure of the Cypress product may reasonably be expected to result in
 # significant property damage, injury or death ("High Risk Product"). By
 # including Cypress's product in a High Risk Product, the manufacturer
 # of such system or application assumes all risk of such use and in doing
 # so agrees to indemnify Cypress against all liability.
#
# script for BCM4390x

# Force system to use warm reset
reset_config srst_nogate connect_assert_srst

set CHIP_RAM_START   0x004A0000

set  _CHIPNAME BCM43909
set  _ENDIAN little

# JTAG speed should be <= F_CPU/6. F_CPU after reset is 8MHz, so use F_JTAG = 1MHz
#
# Since we may be running of an RC oscilator, we crank down the speed a
# bit more to be on the safe side. Perhaps superstition, but if are
# running off a crystal, we can run closer to the limit. Note
# that there can be a pretty wide band where things are more or less stable.
adapter_khz 100

adapter_nsrst_delay 100
jtag_ntrst_delay 100

#jtag scan chain
set _ARM_CR4_JTAGID1 0x3ba00477
set _ARM_CR4_JTAGID2 0x4ba00477
set _ARM_CR4_JTAGID3 0x5ba00477

set CR4_APPS_DEBUG_BASE_ADDRESS 0x80001000
#set CR4_APPS_DEBUG_BASE_ADDRESS 0x18025000
set CR4_WLAN_DEBUG_BASE_ADDRESS 0x18026000

jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_ARM_CR4_JTAGID1 -expected-id $_ARM_CR4_JTAGID2 -expected-id $_ARM_CR4_JTAGID3

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_r4 -endian $_ENDIAN -chain-position $_TARGETNAME -dbgbase $CR4_APPS_DEBUG_BASE_ADDRESS
$_TARGETNAME configure -rtos auto -rtos-wipe

#shutdown OpenOCD daemon when gdb detaches
$_TARGETNAME configure -event gdb-detach {  shutdown }

#disable watchdog when board halted (e.g. breakpoint)
proc halt_event_proc { } {
    set PMU_WATCHDOG_ADDRESS 0x18020634
    mww $PMU_WATCHDOG_ADDRESS 0x0
}
$_TARGETNAME configure -event debug-halted { halt_event_proc }
$_TARGETNAME configure -event halted { halt_event_proc }

$_TARGETNAME configure -memorymap RW 0x00000000         32 FLOPS      "Interrupt Vectors"
$_TARGETNAME configure -memorymap RO 0x00400000 0x00090000 ROM        "ROM"
$_TARGETNAME configure -memorymap RW 0x004A0000 0x00202000 RAM        "RAM"
$_TARGETNAME configure -memorymap RW 0x008A0000 0x00202000 RAM2       "RAM_uncached"
$_TARGETNAME configure -memorymap RW 0x14000000 0x04000000 SFLASH     "SFLASH"
$_TARGETNAME configure -memorymap RW 0x18000000 0x00027000 BACKPLANE  "Backplane Registers"
$_TARGETNAME configure -memorymap RW 0x18100000 0x00032000 BACKPLANE2 "Backplane Wrapper Registers"
$_TARGETNAME configure -memorymap RW 0x40000000 0x08000000 DDR        "DDR"
$_TARGETNAME configure -memorymap RW 0x001b0000 0x00090000 RAM        "WLAN RAM"

