#
# Copyright 2016, Cypress Semiconductor Corporation or a subsidiary of 
 # Cypress Semiconductor Corporation. All Rights Reserved.
 # This software, including source code, documentation and related
 # materials ("Software"), is owned by Cypress Semiconductor Corporation
 # or one of its subsidiaries ("Cypress") and is protected by and subject to
 # worldwide patent protection (United States and foreign),
 # United States copyright laws and international treaty provisions.
 # Therefore, you may use this Software only as provided in the license
 # agreement accompanying the software package from which you
 # obtained this Software ("EULA").
 # If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 # non-transferable license to copy, modify, and compile the Software
 # source code solely for use in connection with Cypress's
 # integrated circuit products. Any reproduction, modification, translation,
 # compilation, or representation of this Software except as specified
 # above is prohibited without the express written permission of Cypress.
 #
 # Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 # EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
 # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
 # reserves the right to make changes to the Software without notice. Cypress
 # does not assume any liability arising out of the application or use of the
 # Software or any product or circuit described in the Software. Cypress does
 # not authorize its products for use in any products where a malfunction or
 # failure of the Cypress product may reasonably be expected to result in
 # significant property damage, injury or death ("High Risk Product"). By
 # including Cypress's product in a High Risk Product, the manufacturer
 # of such system or application assumes all risk of such use and in doing
 # so agrees to indemnify Cypress against all liability.
#
# Main file for NXP LPC18xx Cortex-M4
#

set _CHIPNAME       lpc4330

# After a power-up, reset, or when waking up from deep-power down mode. In these
# situations, the boot code executes. After the boot process has completed, the clock
# configuration of the part is as follows:
# – The core clock BASE_M3_CLK is connected to the output of PLL1 and running at
# 96 MHz.
# – The clock source for the PLL1 is the 12 MHz IRC.

set _CCLK           96000
set _M0_CPUTAPID 0x4ba00477
set _M4_SWDTAPID 0x2ba01477
set _M0_TAPID 0x0BA01477
set _CPURAMSIZE     0x22000
set FLAH_BANK_SIZE  0x80000
set CHIP_RAM_START  0x10000000


#delays on reset lines
adapter_nsrst_delay 200
jtag_ntrst_delay 200

#jtag newtap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID
jtag newtap $_CHIPNAME m4 -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_M0_CPUTAPID
#jtag newtap $_CHIPNAME m4_swd -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_M4_SWDTAPID
jtag newtap $_CHIPNAME m0 -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_M0_TAPID

set _TARGETNAME $_CHIPNAME.m4
target create $_TARGETNAME cortex_m -endian little -chain-position $_TARGETNAME

#target create $_TARGETNAME cortex_m -chain-position $_TARGETNAME

$_TARGETNAME configure -work-area-phys 0x10000000 -work-area-size $_CPURAMSIZE -work-area-backup 0 -rtos auto -rtos-wipe

# flash bank <name> lpc2000 <base> <size> 0 0 <target#> <variant> <clock> [calc checksum]
set _FLASHNAME $_CHIPNAME.flash

# Run with *real slow* clock by default since the
# boot rom could have been playing with the PLL, so
# we have no idea what clock the target is running at.
adapter_khz 1000

# if srst is not fitted use VECTRESET to
# perform a soft reset - SYSRESETREQ is not supported
#cortex_m reset_config srst
cortex_m reset_config sysresetreq

#shutdown OpenOCD daemon when gdb detaches
$_TARGETNAME configure -event gdb-detach {soft_reset_halt; sleep 5; resume; shutdown }

#debug_level 3