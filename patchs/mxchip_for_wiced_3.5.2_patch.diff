From 659086bfa227fb9dde00ac9ba32e1afd583bf290 Mon Sep 17 00:00:00 2001
From: dingqq <dingqq@mxchip.com>
Date: Tue, 17 May 2016 14:58:50 +0800
Subject: [PATCH] add mxchip EMW3162 and EMW3165 for WICED-SDK-3.5.2

---
 platforms/EMW3162/EMW3162.mk         |  68 ++++
 platforms/EMW3162/platform.c         | 451 +++++++++++++++++++++++++
 platforms/EMW3162/platform.h         | 300 +++++++++++++++++
 platforms/EMW3162/platform_config.h  |  89 +++++
 platforms/EMW3162/wifi_nvram_image.h |  92 +++++
 platforms/EMW3165/EMW3165.mk         |  76 +++++
 platforms/EMW3165/platform.c         | 627 +++++++++++++++++++++++++++++++++++
 platforms/EMW3165/platform.h         | 341 +++++++++++++++++++
 platforms/EMW3165/platform_config.h  |  49 +++
 platforms/EMW3165/wifi_nvram_image.h |  92 +++++
 tools/OpenOCD/jlink_swd.cfg          |  13 +
 tools/OpenOCD/mem_helper.tcl         |  22 ++
 tools/OpenOCD/memory.tcl             | 133 ++++++++
 tools/OpenOCD/mmr_helpers.tcl        |  72 ++++
 tools/OpenOCD/stlink-v2-1.cfg        |  16 +
 tools/OpenOCD/stlink-v2.cfg          |  16 +
 tools/OpenOCD/stm32f2x-flash-app.cfg |  10 +-
 tools/OpenOCD/stm32f2x.cfg           | 104 +++---
 tools/OpenOCD/stm32f2x_gdb_jtag.cfg  |   9 -
 tools/OpenOCD/stm32f4x-flash-app.cfg |  10 +-
 tools/OpenOCD/stm32f4x.cfg           | 132 ++++----
 tools/OpenOCD/stm32f4x_gdb_jtag.cfg  |  10 -
 tools/OpenOCD/swj-dp.tcl             |  34 ++
 23 files changed, 2611 insertions(+), 155 deletions(-)
 create mode 100644 platforms/EMW3162/EMW3162.mk
 create mode 100644 platforms/EMW3162/platform.c
 create mode 100644 platforms/EMW3162/platform.h
 create mode 100644 platforms/EMW3162/platform_config.h
 create mode 100644 platforms/EMW3162/wifi_nvram_image.h
 create mode 100644 platforms/EMW3165/EMW3165.mk
 create mode 100644 platforms/EMW3165/platform.c
 create mode 100644 platforms/EMW3165/platform.h
 create mode 100644 platforms/EMW3165/platform_config.h
 create mode 100644 platforms/EMW3165/wifi_nvram_image.h
 create mode 100644 tools/OpenOCD/jlink_swd.cfg
 create mode 100644 tools/OpenOCD/mem_helper.tcl
 create mode 100644 tools/OpenOCD/memory.tcl
 create mode 100644 tools/OpenOCD/mmr_helpers.tcl
 create mode 100644 tools/OpenOCD/stlink-v2-1.cfg
 create mode 100644 tools/OpenOCD/stlink-v2.cfg
 create mode 100644 tools/OpenOCD/swj-dp.tcl

diff --git a/platforms/EMW3162/EMW3162.mk b/platforms/EMW3162/EMW3162.mk
new file mode 100644
index 0000000..242378e
--- /dev/null
+++ b/platforms/EMW3162/EMW3162.mk
@@ -0,0 +1,68 @@
+NAME := Platform_EMW3162
+
+WLAN_CHIP            := 43362
+WLAN_CHIP_REVISION   := A2
+WLAN_CHIP_FAMILY     := 43362
+HOST_MCU_FAMILY      := STM32F2xx
+HOST_MCU_VARIANT     := STM32F2x5
+HOST_MCU_PART_NUMBER := STM32F205RGT6
+
+INTERNAL_MEMORY_RESOURCES = $(ALL_RESOURCES)
+
+ifndef BUS
+BUS := SDIO
+endif
+
+VALID_BUSES := SDIO
+
+EXTRA_TARGET_MAKEFILES +=  $(MAKEFILES_PATH)/standard_platform_targets.mk
+
+WIFI_IMAGE_DOWNLOAD := direct
+GLOBAL_DEFINES      += WWD_DIRECT_RESOURCES
+
+# Global includes
+GLOBAL_INCLUDES  := .
+
+# Global defines
+# HSE_VALUE = STM32 crystal frequency = 26MHz (needed to make UART work correctly)
+GLOBAL_DEFINES += HSE_VALUE=26000000
+GLOBAL_DEFINES += $$(if $$(NO_CRLF_STDIO_REPLACEMENT),,CRLF_STDIO_REPLACEMENT)
+
+# Components
+# There is no SPI flash on EMW3162, but leaving this out makes WICED not compile
+$(NAME)_COMPONENTS += drivers/spi_flash
+
+# Source files
+$(NAME)_SOURCES := platform.c
+
+# WICED APPS
+# APP0 and FILESYSTEM_IMAGE are reserved main app and resources file system
+# FR_APP :=
+# DCT_IMAGE :=
+# OTA_APP :=
+# FILESYSTEM_IMAGE :=
+# WIFI_FIRMWARE :=
+# APP0 :=
+# APP1 :=
+# APP2 :=
+
+# WICED APPS LOOKUP TABLE
+APPS_LUT_HEADER_LOC := 0x0000
+APPS_START_SECTOR := 1
+
+ifneq ($(APP),bootloader)
+ifneq ($(MAIN_COMPONENT_PROCESSING),1)
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | IMPORTANT NOTES                                                                                     | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | Wi-Fi MAC Address                                                                                   | )
+$(info |    The target Wi-Fi MAC address is defined in <WICED-SDK>/generated_mac_address.txt                 | )
+$(info |    Ensure each target device has a unique address.                                                  | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | MCU & Wi-Fi Power Save                                                                              | )
+$(info |    It is *critical* that applications using WICED Powersave API functions connect an accurate 32kHz | )
+$(info |    reference clock to the sleep clock input pin of the WLAN chip. Please read the WICED Powersave   | )
+$(info |    Application Note located in the documentation directory if you plan to use powersave features.   | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+endif
+endif
diff --git a/platforms/EMW3162/platform.c b/platforms/EMW3162/platform.c
new file mode 100644
index 0000000..fdeada5
--- /dev/null
+++ b/platforms/EMW3162/platform.c
@@ -0,0 +1,451 @@
+#include "platform.h"
+#include "platform_config.h"
+#include "platform_init.h"
+#include "platform_isr.h"
+#include "platform_peripheral.h"
+#include "wwd_platform_common.h"
+#include "wwd_rtos_isr.h"
+#include "wiced_defaults.h"
+#include "wiced_platform.h"
+
+/******************************************************
+ *                      Macros
+ ******************************************************/
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+/******************************************************
+ *                   Enumerations
+ ******************************************************/
+
+/******************************************************
+ *                 Type Definitions
+ ******************************************************/
+
+/******************************************************
+ *                    Structures
+ ******************************************************/
+
+/******************************************************
+ *               Static Function Declarations
+ ******************************************************/
+
+/******************************************************
+ *               Variable Definitions
+ ******************************************************/
+
+/* GPIO pin table. Used by WICED/platform/MCU/wiced_platform_common.c */
+
+const platform_gpio_t platform_gpio_pins[] =
+{
+  /* GPIOs numbered like the pins on EMW3162 */
+  [WICED_GPIO_0]  = { GPIOB,  0 }, // Green LED
+  [WICED_GPIO_1]  = { GPIOB,  6 }, // I2C1_SCL
+  [WICED_GPIO_2]  = { GPIOB,  7 }, // I2C1_SDA
+  [WICED_GPIO_3]  = { GPIOA, 13 }, // SWDIO
+  [WICED_GPIO_4]  = { GPIOC,  7 }, 
+  [WICED_GPIO_5]  = { GPIOA,  3 }, // WPS BTN
+  [WICED_GPIO_6]  = { GPIOA,  4 }, // SPI1_CS
+  [WICED_GPIO_7]  = { GPIOB,  3 }, // SPI1_SCK -- JTDO/TRACESWO
+  [WICED_GPIO_8]  = { GPIOB,  4 }, // SPI MISO -- NJTRST
+  [WICED_GPIO_9]  = { GPIOB,  5 }, // SPI1_MOSI
+  [WICED_GPIO_10] = { GPIOB,  8 },
+  [WICED_GPIO_11] = { GPIOA,  1 }, // Easylink BTN
+  [WICED_GPIO_12] = { GPIOC,  2 },
+  [WICED_GPIO_13] = { GPIOB, 14 },
+  [WICED_GPIO_14] = { GPIOC,  6 }, // Sleep SW
+  // [WICED_GPIO_15] is GND
+  [WICED_GPIO_16] = { GPIOB,  1 }, // Red LED and Boot SW
+  // [WICED_GPIO_17] is nRESET     // Reset BTN
+  [WICED_GPIO_18] = { GPIOA, 15 }, // JTDI
+  [WICED_GPIO_19] = { GPIOB, 11 },
+  [WICED_GPIO_20] = { GPIOA, 12 },
+  [WICED_GPIO_21] = { GPIOA, 11 },
+  [WICED_GPIO_22] = { GPIOA,  9 },
+  [WICED_GPIO_23] = { GPIOA, 10 },
+  // [WICED_GPIO_24] is VCC
+  // [WICED_GPIO_25] is GND
+  // [WICED_GPIO_26] is NC
+  // [WICED_GPIO_27] is BOOT0
+  [WICED_GPIO_28] = { GPIOA, 14 }, // JTCK- SWCLK
+  [WICED_GPIO_29] = { GPIOA,  0 }, // Standby SW -- PA0-WKUP
+  [WICED_GPIO_30] = { GPIOB,  9 }, // Status SW
+  [WICED_GPIO_31] = { GPIOA,  5 },
+  [WICED_GPIO_32] = { GPIOA,  6 },
+  [WICED_GPIO_33] = { GPIOA,  7 }, // NOTE: Some schematics and docs incorrectly refer to this pin as
+                                   // PA8. Do not attempt to use PA8, as it's used for the SDIO bus to 
+                                   // the Wifi module.
+  [WICED_GPIO_34] = { GPIOB, 15 },
+  [WICED_GPIO_35] = { GPIOC,  3 },
+  [WICED_GPIO_36] = { GPIOC,  4 },
+  // 37 - 44 are GND or NC
+};
+
+/* ADC peripherals. Used WICED/platform/MCU/wiced_platform_common.c */
+const platform_adc_t platform_adc_peripherals[] =
+{
+    [WICED_ADC_1] = {ADC1, ADC_Channel_3, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_5]},
+    [WICED_ADC_2] = {ADC1, ADC_Channel_4, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_6]},
+    [WICED_ADC_3] = {ADC1, ADC_Channel_1, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_11]},
+    [WICED_ADC_4] = {ADC1, ADC_Channel_12, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_12]},
+    [WICED_ADC_5] = {ADC1, ADC_Channel_9, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_16]},
+    [WICED_ADC_6] = {ADC1, ADC_Channel_0, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_29]},
+    [WICED_ADC_7] = {ADC1, ADC_Channel_5, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_31]},
+    [WICED_ADC_8] = {ADC1, ADC_Channel_6, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_32]},
+    [WICED_ADC_9] = {ADC1, ADC_Channel_13, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_35]},
+    [WICED_ADC_10] = {ADC1, ADC_Channel_14, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_36]},
+};
+
+/* PWM peripherals. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_pwm_t platform_pwm_peripherals[] =
+{
+    [WICED_PWM_1]  = {TIM4, 1, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_0]},
+    [WICED_PWM_2]  = {TIM4, 2, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_16]},
+//     [WICED_PWM_3]  = {TIM2, 2, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_2] }, /* or TIM5/Ch2                       */
+//     [WICED_PWM_4]  = {TIM2, 3, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_3] }, /* or TIM5/Ch3, TIM9/Ch1             */
+//     [WICED_PWM_5]  = {TIM2, 4, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_4] }, /* or TIM5/Ch4, TIM9/Ch2             */
+//     [WICED_PWM_6]  = {TIM2, 1, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_6] }, /* or TIM2_CH1_ETR, TIM8/Ch1N        */
+//     [WICED_PWM_7]  = {TIM3, 1, RCC_APB1Periph_TIM3, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_7] }, /* or TIM1_BKIN, TIM8_BKIN, TIM13/Ch1*/
+//     [WICED_PWM_8]  = {TIM3, 2, RCC_APB1Periph_TIM3, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_8] }, /* or TIM8/Ch1N, TIM14/Ch1           */
+//     [WICED_PWM_9]  = {TIM5, 2, RCC_APB1Periph_TIM5, GPIO_AF_TIM5, &platform_gpio_pins[WICED_GPIO_2] }, /* or TIM2/Ch2                       */
+};
+
+/* SPI peripherals */
+const platform_spi_t platform_spi_peripherals[] =
+{
+    [WICED_SPI_1]  =
+    {
+        .port                  = SPI1,
+        .gpio_af               = GPIO_AF_SPI1,
+        .peripheral_clock_reg  = RCC_APB2Periph_SPI1,
+        .peripheral_clock_func = RCC_APB2PeriphClockCmd,
+        .pin_mosi              = &platform_gpio_pins[WICED_GPIO_9],
+        .pin_miso              = &platform_gpio_pins[WICED_GPIO_8],
+        .pin_clock             = &platform_gpio_pins[WICED_GPIO_7],
+        .tx_dma =
+        {
+            .controller        = DMA2,
+            .stream            = DMA2_Stream5,
+            .channel           = DMA_Channel_3,
+            .irq_vector        = DMA2_Stream5_IRQn,
+            .complete_flags    = DMA_HISR_TCIF5,
+            .error_flags       = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 | DMA_HISR_DMEIF5 ),
+        },
+        .rx_dma =
+        {
+            .controller        = DMA2,
+            .stream            = DMA2_Stream0,
+            .channel           = DMA_Channel_3,
+            .irq_vector        = DMA2_Stream0_IRQn,
+            .complete_flags    = DMA_LISR_TCIF0,
+            .error_flags       = ( DMA_LISR_TEIF0 | DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 ),
+        },
+    }
+};
+
+/* UART peripherals and runtime drivers. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_uart_t platform_uart_peripherals[] =
+{
+    [WICED_UART_1] =
+    {
+        .port               = USART1,
+        .tx_pin             = &platform_gpio_pins[WICED_GPIO_22 ],
+        .rx_pin             = &platform_gpio_pins[WICED_GPIO_23 ],
+        .cts_pin            = NULL,
+        .rts_pin            = NULL,
+        .tx_dma_config =
+        {
+            .controller     = DMA2,
+            .stream         = DMA2_Stream7,
+            .channel        = DMA_Channel_4,
+            .irq_vector     = DMA2_Stream7_IRQn,
+            .complete_flags = DMA_HISR_TCIF7,
+            .error_flags    = ( DMA_HISR_TEIF7 | DMA_HISR_FEIF7 ),
+        },
+        .rx_dma_config =
+        {
+            .controller     = DMA2,
+            .stream         = DMA2_Stream2,
+            .channel        = DMA_Channel_4,
+            .irq_vector     = DMA2_Stream2_IRQn,
+            .complete_flags = DMA_LISR_TCIF2,
+            .error_flags    = ( DMA_LISR_TEIF2 | DMA_LISR_FEIF2 | DMA_LISR_DMEIF2 ),
+        },
+    },
+    [WICED_UART_2] =
+    {
+        .port               = USART6,
+        .tx_pin             = &platform_gpio_pins[WICED_GPIO_14],
+        .rx_pin             = &platform_gpio_pins[WICED_GPIO_4],
+        .cts_pin            = NULL,
+        .rts_pin            = NULL,
+        .tx_dma_config =
+        {
+            .controller     = DMA1,
+            .stream         = DMA1_Stream6,
+            .channel        = DMA_Channel_4,
+            .irq_vector     = DMA1_Stream6_IRQn,
+            .complete_flags = DMA_HISR_TCIF6,
+            .error_flags    = ( DMA_HISR_TEIF6 | DMA_HISR_FEIF6 ),
+        },
+        .rx_dma_config =
+        {
+            .controller     = DMA1,
+            .stream         = DMA1_Stream5,
+            .channel        = DMA_Channel_4,
+            .irq_vector     = DMA1_Stream5_IRQn,
+            .complete_flags = DMA_HISR_TCIF5,
+            .error_flags    = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 | DMA_HISR_DMEIF5 ),
+        },
+    },
+};
+platform_uart_driver_t platform_uart_drivers[WICED_UART_MAX];
+
+
+
+/* I2C peripherals. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_i2c_t platform_i2c_peripherals[] =
+{
+    [WICED_I2C_1] =
+    {
+        .port                    = I2C1,
+        .pin_scl                 = &platform_gpio_pins[WICED_GPIO_1],
+        .pin_sda                 = &platform_gpio_pins[WICED_GPIO_2],
+        .peripheral_clock_reg    = RCC_APB1Periph_I2C1,
+        .tx_dma                  = DMA1,
+        .tx_dma_peripheral_clock = RCC_AHB1Periph_DMA1,
+        .tx_dma_stream           = DMA1_Stream7,
+        .rx_dma_stream           = DMA1_Stream5,
+        .tx_dma_stream_id        = 7,
+        .rx_dma_stream_id        = 5,
+        .tx_dma_channel          = DMA_Channel_1,
+        .rx_dma_channel          = DMA_Channel_1,
+        .gpio_af                 = GPIO_AF_I2C1
+    },
+};
+
+
+const wiced_spi_device_t wiced_nfc_device =
+{
+    .port        = WICED_SPI_1,
+    .chip_select = WICED_GPIO_5,
+    .speed       = 5000000,
+    .mode        = (SPI_CLOCK_RISING_EDGE | SPI_CLOCK_IDLE_HIGH | SPI_NO_DMA | SPI_MSB_FIRST),
+    .bits        = 8
+};
+
+
+/* SPI flash. Exposed to the applications through include/wiced_platform.h */
+// Not on the EMW3162. Needed for WICED OTA updates.
+#if defined ( WICED_PLATFORM_INCLUDES_SPI_FLASH )
+const wiced_spi_device_t wiced_spi_flash =
+{
+    .port        = WICED_SPI_1,
+    .chip_select = WICED_SPI_FLASH_CS,
+    .speed       = 5000000,
+    .mode        = (SPI_CLOCK_RISING_EDGE | SPI_CLOCK_IDLE_HIGH | SPI_NO_DMA | SPI_MSB_FIRST),
+    .bits        = 8
+};
+#endif
+
+/* UART standard I/O configuration */
+#ifndef WICED_DISABLE_STDIO
+static platform_uart_config_t stdio_config =
+{
+    .baud_rate    = 115200,
+    .data_width   = DATA_WIDTH_8BIT,
+    .parity       = NO_PARITY,
+    .stop_bits    = STOP_BITS_1,
+    .flow_control = FLOW_CONTROL_DISABLED,
+};
+#endif
+
+/* Wi-Fi control pins. Used by WICED/platform/MCU/wwd_platform_common.c
+ * SDIO: WWD_PIN_BOOTSTRAP[1:0] = b'00
+ * gSPI: WWD_PIN_BOOTSTRAP[1:0] = b'01
+ */
+const platform_gpio_t wifi_control_pins[] =
+{
+    [WWD_PIN_POWER      ] = { GPIOC,  1 },
+    [WWD_PIN_RESET      ] = { GPIOC,  5 },
+#if defined ( WICED_USE_WIFI_32K_CLOCK_MCO )
+    [WWD_PIN_32K_CLK    ] = { GPIOA,  8 },
+#else
+    [WWD_PIN_32K_CLK    ] = { GPIOA, 11 },
+#endif
+    [WWD_PIN_BOOTSTRAP_0] = { GPIOB,  12 },
+    [WWD_PIN_BOOTSTRAP_1] = { GPIOB,  13 },
+};
+
+/* Wi-Fi SDIO bus pins. Used by WICED/platform/STM32F2xx/WWD/wwd_SDIO.c */
+const platform_gpio_t wifi_sdio_pins[] =
+{
+    [WWD_PIN_SDIO_OOB_IRQ] = { GPIOB, 13 },
+    [WWD_PIN_SDIO_CLK    ] = { GPIOC, 12 },
+    [WWD_PIN_SDIO_CMD    ] = { GPIOD,  2 },
+    [WWD_PIN_SDIO_D0     ] = { GPIOC,  8 },
+    [WWD_PIN_SDIO_D1     ] = { GPIOC,  9 },
+    [WWD_PIN_SDIO_D2     ] = { GPIOC, 10 },
+    [WWD_PIN_SDIO_D3     ] = { GPIOC, 11 },
+};
+
+/* Wi-Fi gSPI bus pins. Used by WICED/platform/STM32F2xx/WWD/wwd_SPI.c */
+const platform_gpio_t wifi_spi_pins[] =
+{
+    [WWD_PIN_SPI_IRQ ] = { GPIOC,  9 },
+    [WWD_PIN_SPI_CS  ] = { GPIOC, 11 },
+    [WWD_PIN_SPI_CLK ] = { GPIOB, 13 },
+    [WWD_PIN_SPI_MOSI] = { GPIOB, 15 },
+    [WWD_PIN_SPI_MISO] = { GPIOB, 14 },
+};
+
+/******************************************************
+ *               Function Definitions
+ ******************************************************/
+
+void platform_init_peripheral_irq_priorities( void )
+{
+    /* Interrupt priority setup. Called by WICED/platform/MCU/STM32F2xx/platform_init.c */
+    NVIC_SetPriority( RTC_WKUP_IRQn    ,  1 ); /* RTC Wake-up event   */
+    NVIC_SetPriority( SDIO_IRQn        ,  2 ); /* WLAN SDIO           */
+    NVIC_SetPriority( DMA2_Stream3_IRQn,  3 ); /* WLAN SDIO DMA       */
+    NVIC_SetPriority( DMA1_Stream3_IRQn,  3 ); /* WLAN SPI DMA        */
+    NVIC_SetPriority( USART1_IRQn      ,  6 ); /* WICED_UART_1        */
+    NVIC_SetPriority( USART2_IRQn      ,  6 ); /* WICED_UART_2        */
+    NVIC_SetPriority( DMA2_Stream7_IRQn,  7 ); /* WICED_UART_1 TX DMA */
+    NVIC_SetPriority( DMA2_Stream2_IRQn,  7 ); /* WICED_UART_1 RX DMA */
+    NVIC_SetPriority( DMA1_Stream6_IRQn,  7 ); /* WICED_UART_2 TX DMA */
+    NVIC_SetPriority( DMA1_Stream5_IRQn,  7 ); /* WICED_UART_2 RX DMA */
+    NVIC_SetPriority( EXTI0_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI1_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI2_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI3_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI4_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI9_5_IRQn     , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI15_10_IRQn   , 14 ); /* GPIO                */
+}
+
+void platform_init_external_devices( void )
+{
+    /*  This function initializes the external interfaces for the platform.
+        You could use this to initialize the peripherals you use.
+        Note however that if you initialize alternative functionality of 
+        JTAG and UART pins, you could lock yourself out of being able to flash
+        new firmware.
+    */
+    
+    //patch added to resolve the microseconds delay hang issue.
+    do
+    {
+        // enable DWT hardware and cycle counting
+        CoreDebug->DEMCR = CoreDebug->DEMCR | CoreDebug_DEMCR_TRCENA_Msk;
+        // reset a counter
+        DWT->CYCCNT = 0;
+        // enable the counter
+        DWT->CTRL = (DWT->CTRL | DWT_CTRL_CYCCNTENA_Msk) ;
+    }
+    while(0);
+
+    /* Initialise LEDs and turn off by default */
+    platform_gpio_init( &platform_gpio_pins[WICED_LED1], OUTPUT_PUSH_PULL );
+    platform_gpio_init( &platform_gpio_pins[WICED_LED2], OUTPUT_PUSH_PULL );
+    platform_gpio_output_low( &platform_gpio_pins[WICED_LED1] );
+    platform_gpio_output_low( &platform_gpio_pins[WICED_LED2] );
+
+    /* Initialise buttons to input by default */
+    platform_gpio_init( &platform_gpio_pins[WICED_BUTTON1], INPUT_PULL_UP );
+    platform_gpio_init( &platform_gpio_pins[WICED_BUTTON2], INPUT_PULL_UP );
+    //platform_gpio_init( &platform_gpio_pins[WICED_SWITCH1], INPUT_PULL_UP );
+    platform_gpio_init( &platform_gpio_pins[WICED_SWITCH2], INPUT_PULL_UP );
+    platform_gpio_init( &platform_gpio_pins[WICED_SWITCH3], INPUT_PULL_UP );
+    platform_gpio_init( &platform_gpio_pins[WICED_SWITCH4], INPUT_PULL_UP );
+
+
+#ifndef WICED_DISABLE_STDIO
+    /* Initialise UART standard I/O */
+    platform_stdio_init( &platform_uart_drivers[STDIO_UART], &platform_uart_peripherals[STDIO_UART], &stdio_config );
+#endif
+}
+
+/* Checks if a factory reset is requested */
+wiced_bool_t platform_check_factory_reset( void )
+{
+    uint32_t factory_reset_counter = 0;
+    int led_state = 0;
+    while (  ( 0 == platform_gpio_input_get( &platform_gpio_pins[ WICED_BUTTON1 ] ) )
+           &&( ( factory_reset_counter += PLATFORM_FACTORY_RESET_CHECK_PERIOD ) <= PLATFORM_FACTORY_RESET_TIMEOUT )
+           &&( WICED_SUCCESS == (wiced_result_t)host_rtos_delay_milliseconds( PLATFORM_FACTORY_RESET_CHECK_PERIOD ) )
+          )
+    {
+        /* Factory reset button is being pressed. */
+        /* User Must press it for 5 seconds to ensure it was not accidental */
+        /* Toggle LED every 100ms */
+
+        if ( led_state == 0 )
+        {
+            platform_gpio_output_high( &platform_gpio_pins[ WICED_LED1 ] );
+            led_state = 1;
+        }
+        else
+        {
+            platform_gpio_output_low( &platform_gpio_pins[ WICED_LED1 ] );
+            led_state = 0;
+        }
+        if ( factory_reset_counter == 5000 )
+        {
+#ifdef emw3162_bootloader_patch
+            if (!platform_gpio_input_get( &platform_gpio_pins[ WICED_BUTTON2 ]) while(1);
+#endif
+            return WICED_TRUE;
+        }
+    }
+    return WICED_FALSE;
+}
+
+/******************************************************
+ *           Interrupt Handler Definitions
+ ******************************************************/
+
+WWD_RTOS_DEFINE_ISR( usart1_irq )
+{
+    platform_uart_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_irq )
+{
+    platform_uart_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart1_tx_dma_irq )
+{
+    platform_uart_tx_dma_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_tx_dma_irq )
+{
+    platform_uart_tx_dma_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart1_rx_dma_irq )
+{
+    platform_uart_rx_dma_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_rx_dma_irq )
+{
+    platform_uart_rx_dma_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+/******************************************************
+ *            Interrupt Handlers Mapping
+ ******************************************************/
+
+/* These DMA assignments can be found STM32F2xx datasheet DMA section */
+WWD_RTOS_MAP_ISR( usart1_irq       , USART1_irq       )
+WWD_RTOS_MAP_ISR( usart1_tx_dma_irq, DMA2_Stream7_irq )
+WWD_RTOS_MAP_ISR( usart1_rx_dma_irq, DMA2_Stream2_irq )
+WWD_RTOS_MAP_ISR( usart2_irq       , USART2_irq       )
+WWD_RTOS_MAP_ISR( usart2_tx_dma_irq, DMA1_Stream6_irq )
+WWD_RTOS_MAP_ISR( usart2_rx_dma_irq, DMA1_Stream5_irq )
diff --git a/platforms/EMW3162/platform.h b/platforms/EMW3162/platform.h
new file mode 100644
index 0000000..5a69606
--- /dev/null
+++ b/platforms/EMW3162/platform.h
@@ -0,0 +1,300 @@
+
+/** @file
+ * Defines peripherals available for use on EMW3162 board
+ */
+#pragma once
+
+#ifdef __cplusplus
+extern "C"
+{
+#endif
+
+/******************************************************
+ *                      Macros
+ ******************************************************/
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+/******************************************************
+ *                   Enumerations
+ ******************************************************/
+
+/*
+EMW3162 on EMB-380-S platform pin definitions ...
++-------------------------------------------------------------------------+
+| Enum ID       |Pin | STM32| Peripheral  |    Board     |   Peripheral   |
+|               | #  | Port | Available   |  Connection  |     Alias      |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_1  | 1  | B  6 | GPIO        |              |                |
+|               |    |      | TIM4_CH1    |              |                |
+|               |    |      | CAN2_TX     |              |                |
+|               |    |      | USART1_TX   |              |                |
+|               |    |      | I2C1_SCL    |              |                |
+|               |    |      | CAN2_TX     |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_2  | 2  | B  7 | GPIO        |              |                |
+|               |    |      | I2C1_SCL    |              |                |
+|               |    |      | USART1_RX   |              |                |
+|               |    |      | TIM4_CH2    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 3  | A  13| SWDIO       |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_4  | 4  | C  7 | USART2_RX   |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | TIM8_CH2    |              |                |
+|               |    |      | TIM3_CH2    |              |                |
+|               |    |      | I2S3_MCK    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_5  | 5  | A  3 | ADC123_IN3  |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | TIM2_CH4    |              |                |
+|               |    |      | TIM5_CH4    |              |                |
+|               |    |      | TIM9_CH2    |              |                |
+|               |    |      | UART2_RX    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_6  | 6  | A  4 | SPI1_NSS    |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | SPI3_NSS    |              |                |
+|               |    |      | I2S3_WS     |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_7  | 7  | B  3 | JTDO        |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | I2S3_SCK    |              |                |
+|               |    |      | TIM2_CH2    |              |                |
+|               |    |      | SPI1_SCK    |              |                |
+|               |    |      | SPI3_SCK    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_8  | 8  | B  4 | NJRST       |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | SPI3_MISO   |              |                |
+|               |    |      | SPI1_MISO   |              |                |
+|               |    |      | TIM3_CH1    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_9  | 9  | B  5 | I2C1_SMBA   |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | CAN2_RX     |              |                |
+|               |    |      | SPI1_MOSI   |              |                |
+|               |    |      | SPI3_MOSI   |              |                |
+|               |    |      | TIM3_CH2    |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_10 | 10 | B  8 | GPIO        |              |                |
+|               |    |      | TIM4_CH3    |              |                |
+|               |    |      | TIM10_CH1   |              |                |
+|               |    |      | I2C1_SCL    |              |                |
+|               |    |      | CAN1_RX     |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_11 | 11 | A  1 | GPIO        |EasyLink_BUTTON |              |
+|               |    |      | TIM5_CH2    |              |                |
+|               |    |      | TIM2_CH2    |              |                |
+|               |    |      | ADC123_IN1  |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_12 | 12 | C  2 | GPIO        |              |                |
+|               |    |      | ADC123_ IN12|              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_13 | 13 | B 14 | GPIO        |              |                |
+|               |    |      | TIM1_CH2N   |              |                |
+|               |    |      | TIM12_CH1   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_14 | 14 | C  6 | GPIO        |              |                |
+|               |    |      | TIM3_CH1    |              |                |
+|               |    |      | TIM8_CH1    |              |                |
+|               |    |      | USART6_TX   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 15 | GND  |             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_1  | 16 | B 1  | GPIO        |  RF_LED      |                |
+|               |    |      | TIM3_CH4    |              |                |
+|               |    |      | TIM8_CH3N   |              |                |
+|               |    |      | TIM1_CH4N   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 17 |nReset|             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_18 | 18 | A 15 | GPIO        |              |                |
+|               |    |      | JTDI        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_19 | 19 | B 11 | GPIO        |              |                |
+|               |    |      | TIM2_CH4    |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_20 | 20 | A 12 | GPIO        |              |                |
+|               |    |      | USART1_RTS  |              |                |
+|               |    |      | CAN1_TX     |              |                |
+|               |    |      | TIM1_ETR    |              |                |
+|               |    |      | OTG_FS_DP   |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_21 | 21 | A 11 | GPIO        |              |                |
+|               |    |      | USART1_CTS  |              |                |
+|               |    |      | CAN1_RX     |              |                |
+|               |    |      | TIM1_CH4    |              |                |
+|               |    |      | OTG_FS_DM   |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_22 | 22 | A  9 | GPIO        |              |                |
+|               |    |      | USART1_TX   |STDIO_UART_TX |                |
+|               |    |      | TIM1_CH2    |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_23 | 23 | A 10 | GPIO        |              |                |
+|               |    |      | USART1_RX   |STDIO_UART_RX |                |
+|               |    |      | TIM1_CH3    |              |                |
+|               |    |      | OTG_FS_ID   |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 24 | VCC  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 25 | GND  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 26 | NC   |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 27 | BOOT0|             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 28 | A 14 | JTCK-SWCLK  |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_29 | 29 | A  0 | GPIO        |StandBy/WakeUp|                |
+|               |    |      | TIM2_CH1_ETR|              |                |
+|               |    |      | TIM5_CH1    |              |                |
+|               |    |      | TIM8_ETR    |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_30 | 30 | B  9 | GPIO        | Status_Sel   |                |
+|               |    |      | TIM4_CH4    |              |                |
+|               |    |      | TIM11_CH1   |              |                |
+|               |    |      | I2C1_SDA    |              |                |
+|               |    |      | CAN1_TX     |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_SYS_LED |    | B  0 | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+*
+*/
+
+typedef enum
+{
+    WICED_GPIO_0,
+    WICED_GPIO_1,
+    WICED_GPIO_2,
+    WICED_GPIO_3,
+    WICED_GPIO_4,
+    WICED_GPIO_5,
+    WICED_GPIO_6,
+    WICED_GPIO_7,
+    WICED_GPIO_8,
+    WICED_GPIO_9,
+    WICED_GPIO_10,
+    WICED_GPIO_11,
+    WICED_GPIO_12,
+    WICED_GPIO_13,
+    WICED_GPIO_14,
+    WICED_GPIO_15,
+    WICED_GPIO_16,
+    WICED_GPIO_17,
+    WICED_GPIO_18,
+    WICED_GPIO_19,
+    WICED_GPIO_20,
+    WICED_GPIO_21,
+    WICED_GPIO_22,
+    WICED_GPIO_23,
+    WICED_GPIO_24,
+    WICED_GPIO_25,
+    WICED_GPIO_26,
+    WICED_GPIO_27,
+    WICED_GPIO_28,
+    WICED_GPIO_29,
+    WICED_GPIO_30,
+    WICED_GPIO_31,
+    WICED_GPIO_32,
+    WICED_GPIO_33,
+    WICED_GPIO_34,
+    WICED_GPIO_35,
+    WICED_GPIO_36,
+    WICED_GPIO_37,
+    WICED_GPIO_38,
+    WICED_GPIO_39,
+    WICED_GPIO_40,
+    WICED_GPIO_41,
+    WICED_GPIO_42,
+    WICED_GPIO_43,
+    WICED_GPIO_44,
+    WICED_GPIO_MAX, /* Denotes the total number of GPIO port aliases. Not a valid GPIO alias */
+    WICED_GPIO_32BIT = 0x7FFFFFFF,
+} wiced_gpio_t;
+
+typedef enum
+{
+    WICED_SPI_1,
+    WICED_SPI_MAX, /* Denotes the total number of SPI port aliases. Not a valid SPI alias */
+    WICED_SPI_32BIT = 0x7FFFFFFF,
+} wiced_spi_t;
+
+typedef enum
+{
+    WICED_I2C_1,
+    WICED_I2C_MAX,
+    WICED_I2C_32BIT = 0x7FFFFFFF,
+} wiced_i2c_t;
+
+typedef enum
+{
+    WICED_PWM_1,
+    WICED_PWM_2,
+    WICED_PWM_3,
+    WICED_PWM_4,
+    WICED_PWM_5,
+    WICED_PWM_6,
+    WICED_PWM_7,
+    WICED_PWM_8,
+    WICED_PWM_9,
+    WICED_PWM_MAX, /* Denotes the total number of PWM port aliases. Not a valid PWM alias */
+    WICED_PWM_32BIT = 0x7FFFFFFF,
+} wiced_pwm_t;
+
+typedef enum
+{
+    WICED_ADC_1,
+    WICED_ADC_2,
+    WICED_ADC_3,
+    WICED_ADC_4,
+    WICED_ADC_5,
+    WICED_ADC_6,
+    WICED_ADC_7,
+    WICED_ADC_8,
+    WICED_ADC_9,
+    WICED_ADC_10,
+    WICED_ADC_MAX, /* Denotes the total number of ADC port aliases. Not a valid ADC alias */
+    WICED_ADC_32BIT = 0x7FFFFFFF,
+} wiced_adc_t;
+
+typedef enum
+{
+    WICED_UART_1,
+    WICED_UART_2,
+    WICED_UART_MAX, /* Denotes the total number of UART port aliases. Not a valid UART alias */
+    WICED_UART_32BIT = 0x7FFFFFFF,
+} wiced_uart_t;
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+/* UART port used for standard I/O */
+#define STDIO_UART ( WICED_UART_1 )
+
+/* SPI flash is NOT present on EMW3162 */
+//#define WICED_PLATFORM_INCLUDES_SPI_FLASH
+#define WICED_SPI_FLASH_CS ( WICED_GPIO_6 )
+
+/* Components connected to external I/Os */
+#define WICED_LED1         ( WICED_GPIO_0 ) // green led on wifi model
+#define WICED_LED2         ( WICED_GPIO_16) // red led on wifi model
+
+#define WICED_BUTTON1      ( WICED_GPIO_5 ) // WPS button on dev board
+#define WICED_BUTTON2      ( WICED_GPIO_11) // EASYLINK button on dev board
+
+#define WICED_SWITCH1      ( WICED_GPIO_16) // BOOT switch on dev board
+#define WICED_SWITCH2      ( WICED_GPIO_30) // STATUS switch on dev board
+#define WICED_SWITCH3      ( WICED_GPIO_29) // STANDBY switch on dev board
+#define WICED_SWITCH4      ( WICED_GPIO_14) // SLEEP switch on dev board
+
+/* Bootloader OTA and OTA2 factory reset during settings */
+#define PLATFORM_FACTORY_RESET_CHECK_PERIOD     (  100 )
+#define PLATFORM_FACTORY_RESET_TIMEOUT          ( 5000 )
+
+#ifdef __cplusplus
+} /*extern "C" */
+#endif
diff --git a/platforms/EMW3162/platform_config.h b/platforms/EMW3162/platform_config.h
new file mode 100644
index 0000000..411fbb0
--- /dev/null
+++ b/platforms/EMW3162/platform_config.h
@@ -0,0 +1,89 @@
+/** @file
+ * Defines internal configuration of the EMW3162 board
+ */
+#pragma once
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+/******************************************************
+ *  MCU Constants and Options
+ *
+ *  NOTE: The clock configuration utility from ST is used to calculate these values
+ *        http://www.st.com/st-web-ui/static/active/en/st_prod_software_internet/resource/technical/software/utility/stsw-stm32090.zip
+ ******************************************************/
+
+/*  CPU clock : 120 MHz */
+#define CPU_CLOCK_HZ         ( 120000000 )
+
+/*  Use external crystal */
+#define HSE_SOURCE           ( RCC_HSE_ON )
+
+/*  AHB clock  : System clock */
+#define AHB_CLOCK_DIVIDER    ( RCC_SYSCLK_Div1 )
+
+/*  APB1 clock : AHB clock / 4 */
+#define APB1_CLOCK_DIVIDER   ( RCC_HCLK_Div4 )
+
+/*  APB2 clock : AHB clock / 2 */
+#define APB2_CLOCK_DIVIDER   ( RCC_HCLK_Div2 )
+
+/*  PLL source : external crystal */
+#define PLL_SOURCE           ( RCC_PLLSource_HSE )
+
+/*  PLLM : 26 */
+#define PLL_M_CONSTANT       ( 26 )
+
+/*  PLLN : 240 */
+#define PLL_N_CONSTANT       ( 240 )
+
+/*  PLLP : 2 */
+#define PLL_P_CONSTANT       ( 2 )
+
+/*  PLLQ : 5 */
+#define PLL_Q_CONSTANT       ( 5 )
+
+/*  System clock source  : PLL clock */
+#define SYSTEM_CLOCK_SOURCE  ( RCC_SYSCLKSource_PLLCLK )
+
+/*  SysTick clock source : AHB clock  */
+#define SYSTICK_CLOCK_SOURCE ( SysTick_CLKSource_HCLK )
+
+/*  Internal flash wait state : 3 cycles */
+#define INT_FLASH_WAIT_STATE ( FLASH_Latency_3 )
+
+/*  Internal flash voltage range : 2.7 to 3.6V */
+#define PLATFORM_STM32_VOLTAGE_2V7_TO_3V6
+
+
+/******************************************************
+ *  Wi-Fi Options
+ ******************************************************/
+
+/*  GPIO pins are used to bootstrap Wi-Fi to SDIO or gSPI mode */
+#define WICED_WIFI_USE_GPIO_FOR_BOOTSTRAP
+
+/*  Wi-Fi GPIO0 pin is used for out-of-band interrupt */
+#define WICED_WIFI_OOB_IRQ_GPIO_PIN  ( 0 )
+
+/*  Wi-Fi power pin is present */
+#define WICED_USE_WIFI_POWER_PIN
+
+/*  Wi-Fi reset pin is present */
+#define WICED_USE_WIFI_RESET_PIN
+
+/*  WLAN Powersave Clock Source
+ *  The WLAN sleep clock can be driven from one of two sources:
+ *  1. MCO (MCU Clock Output) - default
+ *  2. WLAN 32K internal oscillator (30% inaccuracy)
+ *     - Comment the following directive : WICED_USE_WIFI_32K_CLOCK_MCO
+ */
+#define WICED_USE_WIFI_32K_CLOCK_MCO
+
+/*  OTA */
+// EMW3162 doesn't have a SPI flash chip
+//#define PLATFORM_HAS_OTA
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
diff --git a/platforms/EMW3162/wifi_nvram_image.h b/platforms/EMW3162/wifi_nvram_image.h
new file mode 100644
index 0000000..67f1d9d
--- /dev/null
+++ b/platforms/EMW3162/wifi_nvram_image.h
@@ -0,0 +1,92 @@
+/** @file
+ *  NVRAM variables which define BCM43362 Parameters for the
+ *  USI module used on the EMW3162 board
+ *
+ */
+
+#ifndef INCLUDED_NVRAM_IMAGE_H_
+#define INCLUDED_NVRAM_IMAGE_H_
+
+#include <string.h>
+#include <stdint.h>
+#include "../generated_mac_address.txt"
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/**
+ * Character array of NVRAM image
+ */
+
+static const char wifi_nvram_image[] =
+        "manfid=0x2d0"                                                       "\x00"
+        "prodid=0x492"                                                       "\x00"
+        "vendid=0x14e4"                                                      "\x00"
+        "devid=0x4343"                                                       "\x00"
+        "boardtype=0x05a0"                                                   "\x00"
+        "boardrev=0x1301"                                                    "\x00" /*Board Revision is REV3.1*/
+        "boardnum=777"                                                       "\x00"
+        "xtalfreq=26000"                                                     "\x00"
+        "boardflags=0xa00"                                                   "\x00"
+        "sromrev=3"                                                          "\x00"
+        "wl0id=0x431b"                                                       "\x00"
+        NVRAM_GENERATED_MAC_ADDRESS                                          "\x00"
+        "aa2g=3"                                                             "\x00"
+        "ag0=2"                                                              "\x00"
+        "maxp2ga0=68"                                                        "\x00"
+        "ofdm2gpo=0x44444444"                                                "\x00"
+        "mcs2gpo0=0x3333"                                                    "\x00"
+        "mcs2gpo1=0x6333"                                                    "\x00"
+        "pa0maxpwr=80"                                                       "\x00"
+        "pa0b0=0x133E"                                                       "\x00"
+        "pa0b1=0xFDBA"                                                       "\x00"
+        "pa0b2=0xFF53"                                                       "\x00"
+        "pa0itssit=62"                                                       "\x00"
+        "pa1itssit=62"                                                       "\x00"
+        "temp_based_dutycy_en=1"                                             "\x00"
+        "tx_duty_cycle_ofdm=100"                                             "\x00"
+        "tx_duty_cycle_cck=100"                                              "\x00"
+        "tx_ofdm_temp_0=115"                                                 "\x00"
+        "tx_cck_temp_0=115"                                                  "\x00"
+        "tx_ofdm_dutycy_0=40"                                                "\x00"
+        "tx_cck_dutycy_0=40"                                                 "\x00"
+        "tx_ofdm_temp_1=255"                                                 "\x00"
+        "tx_cck_temp_1=255"                                                  "\x00"
+        "tx_ofdm_dutycy_1=40"                                                "\x00"
+        "tx_cck_dutycy_1=40"                                                 "\x00"
+        "tx_tone_power_index=40"                                             "\x00"
+        "tx_tone_power_index.fab.3=48"                                       "\x00"
+        "cckPwrOffset=0"                                                     "\x00"
+        "ccode=0"                                                            "\x00"
+        "rssismf2g=0xa"                                                      "\x00"
+        "rssismc2g=0x3"                                                      "\x00"
+        "rssisav2g=0x7"                                                      "\x00"
+        "triso2g=0"                                                          "\x00"
+        "noise_cal_enable_2g=0"                                              "\x00"
+        "noise_cal_po_2g=0"                                                  "\x00"
+        "noise_cal_po_2g.fab.3=-2"                                           "\x00"
+        "swctrlmap_2g=0x050c050c,0x030a030a,0x030a030a,0x0,0x1ff"            "\x00"
+        "temp_add=29767"                                                     "\x00"
+        "temp_mult=425"                                                      "\x00"
+        "temp_q=10"                                                          "\x00"
+        "initxidx2g=45"                                                      "\x00"
+        "tssitime=1"                                                         "\x00"
+        "rfreg033=0x19"                                                      "\x00"
+        "rfreg033_cck=0x1f"                                                  "\x00"
+        "cckPwrIdxCorr=-8"                                                   "\x00"
+        "spuravoid_enable2g=1"                                               "\x00"
+        "edonthd=-70"                                                        "\x00"
+        "edoffthd=-76"                                                       "\x00"
+        "\x00\x00";
+
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
+#else /* ifndef INCLUDED_NVRAM_IMAGE_H_ */
+
+#error Wi-Fi NVRAM image included twice
+
+#endif /* ifndef INCLUDED_NVRAM_IMAGE_H_ */
diff --git a/platforms/EMW3165/EMW3165.mk b/platforms/EMW3165/EMW3165.mk
new file mode 100644
index 0000000..2c4cdcd
--- /dev/null
+++ b/platforms/EMW3165/EMW3165.mk
@@ -0,0 +1,76 @@
+NAME := Platform_EMW3165
+
+WLAN_CHIP            := 43362
+WLAN_CHIP_REVISION   := A2
+WLAN_CHIP_FAMILY     := 43362
+HOST_MCU_FAMILY      := STM32F4xx
+HOST_MCU_VARIANT     := STM32F411
+HOST_MCU_PART_NUMBER := STM32F411CEY6
+
+INTERNAL_MEMORY_RESOURCES = $(ALL_RESOURCES)
+
+ifndef BUS
+BUS := SDIO
+endif
+
+EXTRA_TARGET_MAKEFILES +=  $(MAKEFILES_PATH)/standard_platform_targets.mk
+
+VALID_BUSES := SDIO SPI
+
+ifeq ($(BUS),SDIO)
+ifeq ($(MULTI_APP_WIFI_FIRMWARE),)
+GLOBAL_DEFINES          += WWD_DIRECT_RESOURCES
+else
+# Setting some internal build parameters
+WIFI_FIRMWARE           := $(MULTI_APP_WIFI_FIRMWARE)
+WIFI_FIRMWARE_LOCATION 	:= WIFI_FIRMWARE_IN_MULTI_APP
+GLOBAL_DEFINES          += WIFI_FIRMWARE_IN_MULTI_APP
+endif
+endif
+
+# Global includes
+GLOBAL_INCLUDES  := .
+
+# Global defines
+# HSE_VALUE = STM32 crystal frequency = 26MHz (needed to make UART work correctly)
+GLOBAL_DEFINES += HSE_VALUE=26000000
+GLOBAL_DEFINES += $$(if $$(NO_CRLF_STDIO_REPLACEMENT),,CRLF_STDIO_REPLACEMENT)
+GLOBAL_DEFINES += GPIO_LED_NOT_SUPPORTED
+
+# Components
+$(NAME)_COMPONENTS += drivers/spi_flash
+
+# Source files
+$(NAME)_SOURCES := platform.c
+
+# WICED APPS
+# APP0 and FILESYSTEM_IMAGE are reserved main app and resources file system
+# FR_APP :=
+# DCT_IMAGE :=
+# OTA_APP :=
+# FILESYSTEM_IMAGE :=
+# WIFI_FIRMWARE :=
+# APP0 :=
+# APP1 :=
+# APP2 :=
+
+# WICED APPS LOOKUP TABLE
+APPS_LUT_HEADER_LOC := 0x0000
+APPS_START_SECTOR := 1
+
+ifneq ($(APP),bootloader)
+ifneq ($(MAIN_COMPONENT_PROCESSING),1)
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | IMPORTANT NOTES                                                                                     | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | Wi-Fi MAC Address                                                                                   | )
+$(info |    The target Wi-Fi MAC address is defined in <WICED-SDK>/generated_mac_address.txt                 | )
+$(info |    Ensure each target device has a unique address.                                                  | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+$(info | MCU & Wi-Fi Power Save                                                                              | )
+$(info |    It is *critical* that applications using WICED Powersave API functions connect an accurate 32kHz | )
+$(info |    reference clock to the sleep clock input pin of the WLAN chip. Please read the WICED Powersave   | )
+$(info |    Application Note located in the documentation directory if you plan to use powersave features.   | )
+$(info +-----------------------------------------------------------------------------------------------------+ )
+endif
+endif
diff --git a/platforms/EMW3165/platform.c b/platforms/EMW3165/platform.c
new file mode 100644
index 0000000..b4d4467
--- /dev/null
+++ b/platforms/EMW3165/platform.c
@@ -0,0 +1,627 @@
+#include "platform.h"
+#include "platform_config.h"
+#include "platform_init.h"
+#include "platform_isr.h"
+#include "platform_peripheral.h"
+#include "wwd_platform_common.h"
+#include "wwd_rtos_isr.h"
+#include "wiced_defaults.h"
+#include "wiced_platform.h"
+
+/******************************************************
+ *                      Macros
+ ******************************************************/
+#define PLATFORM_FACTORY_RESET_CHECK_PERIOD     ( 100 )
+#define PLATFORM_FACTORY_RESET_TIMEOUT          ( 5000 )
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+/******************************************************
+ *                   Enumerations
+ ******************************************************/
+
+/******************************************************
+ *                 Type Definitions
+ ******************************************************/
+
+/******************************************************
+ *                    Structures
+ ******************************************************/
+
+/******************************************************
+ *               Static Function Declarations
+ ******************************************************/
+
+/******************************************************
+ *               Variable Definitions
+ ******************************************************/
+
+/* GPIO pin table. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_gpio_t platform_gpio_pins[] =
+{
+	//[WICED_GPIO_1]										// Not connected
+	[WICED_GPIO_2]                       = { GPIOB,   2 },	// BOOT1
+	//[WICED_GPIO_3]										// Not connected
+
+	// SPI1 - FLASH dedicated SPI bus. Do not use!
+	[WICED_GPIO_4]                       = { GPIOA,   7 },	// Flash_SPI1_MOSI
+	[WICED_GPIO_5]                       = { GPIOA,  15 },	// Flash_SPI1_NSS
+	[WICED_GPIO_6]                       = { GPIOB,   3 },	// Flash_SPI1_SCK
+	[WICED_GPIO_7]                       = { GPIOB,   4 },	// Flash_SPI1_MISO
+	// End of SPI1 bus
+
+	[WICED_GPIO_8]                       = { GPIOA,   2 },	// TIM2_CH3,TIM5_CH3,TIM9_CH1,I2S2_CKIN,USART2_TX,ADC1_2
+	[WICED_GPIO_9]                       = { GPIOA,   1 },	// TIM2_CH2,TIM5_CH2,SPI4_MOSI/I2S4_SD,USART2_RTS,ADC1_1
+	//[WICED_GPIO_10]										// VBAT - Connect to VDD if not in use.
+	//[WICED_GPIO_11]										// Not connected
+	[WICED_GPIO_12]                      = { GPIOA,   3 },	// TIM2_CH4,TIM5_CH4,TIM9_CH2,I2S2_MCK,USART2_RX,ADC1_3
+	//[WICED_GPIO_13]										// NRST - RESET
+	[WICED_GPIO_14]                      = { GPIOA,   0 },	// Wi-Fi wake up MCU
+	//[WICED_GPIO_15]										// Not connected
+	[WICED_GPIO_16]                      = { GPIOC,  13 },	// RTC_AMP1, RTC_OUT, RTC_TS
+	[WICED_GPIO_17]                      = { GPIOB,  10 },	// TIM2_CH3,I2C2_SCL,SPI2_SCK/I2S2_CK,I2S3_MCK
+	[WICED_GPIO_18]                      = { GPIOB,   9 },	// TIM4_CH4,TIM11_CH1,I2C1_SDA,SPI2_NSS/I2S2_WS,I2C2_SDA
+	[WICED_GPIO_19]                      = { GPIOB,  12 },	// TIM1_BKIN,I2C2_SMBA,SPI2_NSS/I2S2_WS,SPI4_NSS/I2S4_WS,SPI3_SCK/I2S3_CK
+	//[WICED_GPIO_2O]										// GND
+	//[WICED_GPIO_21]										// GND
+	//[WICED_GPIO_22]										// Not connected
+	//[WICED_GPIO_23]										// Not connected
+	//[WICED_GPIO_24]										// Not connected
+
+	// NOTE: Using those pins for anything other than debugging could make your life difficult
+	[WICED_GPIO_25]                      = { GPIOA,  14 },	// SWD_SWCLK
+	[WICED_GPIO_26]                      = { GPIOA,  13 },	// SWD_SWDIO
+	// END NOTE
+
+	[WICED_GPIO_27]                      = { GPIOA,  12 },	// TIM1_ETR,SPI5_MISO,USART1_RTS,USART6_RX,USB_FS_DP
+	//[WICED_GPIO_28]										// Not connected
+	[WICED_GPIO_29]                      = { GPIOA,  10 },	// TIM1_CH3,SPI5_MOSI/I2S5_SD,USART1_RX,USB_FS_ID
+	[WICED_GPIO_30]                      = { GPIOB,   6 },	// TIM4_CH1,I2C1_SCL,USART1_TX
+	[WICED_GPIO_31]                      = { GPIOB,   8 },	// TIM4_CH3,TIM10_CH1,I2C1_SCL,SPI5_MOSI/I2S5_SD,I2C3_SDA
+	//[WICED_GPIO_32]										// Not connected
+	[WICED_GPIO_33]                      = { GPIOB,  13 },	// TIM1_CH1N,SPI2_SCK/I2S2_CK,SPI4_SCK/I2S4_CK
+	[WICED_GPIO_34]                      = { GPIOA,   5 },	// TIM2_CH1/TIM2_ET,SPI1_SCK/I2S1_CK,ADC1_5
+	[WICED_GPIO_35]                      = { GPIOA,  11 },	// TIM1_CH4,SPI4_MISO,USART1_CTS,USART6_TX,USB_FS_DM
+	[WICED_GPIO_36]                      = { GPIOB,   1 },	// TIM1_CH3N,TIM3_CH4,SPI5_NSS/I2S5_WS,ADC1_9
+	[WICED_GPIO_37]                      = { GPIOB,   0 },	// TIM1_CH2N,TIM3_CH3,SPI5_SCK/I2S5_CK,ADC1_8
+	[WICED_GPIO_38]                      = { GPIOA,   4 },	// SPI1_NSS/I2S1_WS,SPI3_NSS/I2S3_WS,USART2_CK,ADC1_4
+	//[WICED_GPIO_39]										// VDD
+	//[WICED_GPIO_40]										// VDD
+	//[WICED_GPIO_41]										// ANT - External antenna pad
+
+};
+
+/* ADC peripherals. Used WICED/platform/MCU/wiced_platform_common.c */
+const platform_adc_t platform_adc_peripherals[] =
+{
+    [WICED_ADC_1] = {ADC1, ADC_Channel_3, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_9]},
+    [WICED_ADC_2] = {ADC1, ADC_Channel_4, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_8]},
+    [WICED_ADC_3] = {ADC1, ADC_Channel_1, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_12]},
+    [WICED_ADC_4] = {ADC1, ADC_Channel_12, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_38]},
+    [WICED_ADC_5] = {ADC1, ADC_Channel_9, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_34]},
+    //[WICED_ADC_6] = {ADC1, ADC_Channel_0, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_xx]},
+    //[WICED_ADC_7] = {ADC1, ADC_Channel_5, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_xx]},
+    [WICED_ADC_8] = {ADC1, ADC_Channel_6, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_37]},
+    [WICED_ADC_9] = {ADC1, ADC_Channel_13, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_36]},
+    //[WICED_ADC_10] = {ADC1, ADC_Channel_14, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_xx]},
+};
+
+/* PWM peripherals. Used by WICED/platform/MCU/wiced_platform_common.c */
+/* This is a sample config, refer to the datasheet to alternative configurations of timers and channels*/
+const platform_pwm_t platform_pwm_peripherals[] =
+{
+    [WICED_PWM_1]  = {TIM4, 1, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_30]},
+    [WICED_PWM_2]  = {TIM4, 3, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_31]},
+    [WICED_PWM_3]  = {TIM4, 4, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_18]},
+    [WICED_PWM_4]  = {TIM2, 1, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_34]},
+    [WICED_PWM_5]  = {TIM2, 2, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_9] },
+    [WICED_PWM_6]  = {TIM2, 3, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_17]},
+    [WICED_PWM_7]  = {TIM2, 4, RCC_APB1Periph_TIM4, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_12]},
+    [WICED_PWM_8]  = {TIM3, 3, RCC_APB1Periph_TIM3, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_37]},
+    [WICED_PWM_9]  = {TIM3, 4, RCC_APB1Periph_TIM4, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_36]},
+};
+
+/* SPI peripherals */
+/* NOTE: SPI peripherals SPI4, SPI5 and SPI6 might have issues with RX DMA
+ *       See https://github.com/MXCHIP-EMW/WICED-for-EMW/pull/13
+ *       and https://github.com/MXCHIP-EMW/WICED-for-EMW/issues/9
+ */
+const platform_spi_t platform_spi_peripherals[] =
+{
+  [WICED_SPI_1]  =
+  {
+    .port                         = SPI1,
+    .gpio_af                      = GPIO_AF_SPI1,
+    .peripheral_clock_reg         = RCC_APB2Periph_SPI1,
+    .peripheral_clock_func        = RCC_APB2PeriphClockCmd,
+    .pin_mosi                     = &platform_gpio_pins[WICED_GPIO_4],
+    .pin_miso                     = &platform_gpio_pins[WICED_GPIO_7],
+    .pin_clock                    = &platform_gpio_pins[WICED_GPIO_6],
+    .tx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream5,
+      .channel                    = DMA_Channel_3,
+      .irq_vector                 = DMA2_Stream5_IRQn,
+      .complete_flags             = DMA_HISR_TCIF5,
+      .error_flags                = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 ),
+    },
+    .rx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream0,
+      .channel                    = DMA_Channel_3,
+      .irq_vector                 = DMA2_Stream0_IRQn,
+      .complete_flags             = DMA_LISR_TCIF0,
+      .error_flags                = ( DMA_LISR_TEIF0 | DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 ),
+    },
+  },
+  [WICED_SPI_2]  =
+  {
+    .port                         = SPI2,
+    .gpio_af                      = GPIO_AF_SPI2,
+    .peripheral_clock_reg         = RCC_APB1Periph_SPI2,
+    .peripheral_clock_func        = RCC_APB1PeriphClockCmd,
+//    .pin_mosi                     = &platform_gpio_pins[WICED_GPIO_X],
+//    .pin_miso                     = &platform_gpio_pins[WICED_GPIO_X],
+//    .pin_clock                    = &platform_gpio_pins[WICED_GPIO_X],
+    .tx_dma =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream4,
+      .channel                    = DMA_Channel_0,
+      .irq_vector                 = DMA1_Stream4_IRQn,
+      .complete_flags             = DMA_HISR_TCIF4,
+      .error_flags                = ( DMA_HISR_TEIF4 | DMA_HISR_FEIF4 ),
+    },
+    .rx_dma =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream3,
+      .channel                    = DMA_Channel_0,
+      .irq_vector                 = DMA1_Stream3_IRQn,
+      .complete_flags             = DMA_LISR_TCIF3,
+      .error_flags                = ( DMA_LISR_TEIF3 | DMA_LISR_FEIF3 | DMA_LISR_DMEIF3 ),
+    },
+  },
+  [WICED_SPI_3]  =
+  {
+    .port                         = SPI3,
+    .gpio_af                      = GPIO_AF_SPI3,
+    .peripheral_clock_reg         = RCC_APB1Periph_SPI3,
+    .peripheral_clock_func        = RCC_APB1PeriphClockCmd,
+//    .pin_mosi                     = &platform_gpio_pins[WICED_GPIO_X],
+//    .pin_miso                     = &platform_gpio_pins[WICED_GPIO_X],
+    .pin_clock                    = &platform_gpio_pins[WICED_GPIO_12],
+    .tx_dma =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream5,
+      .channel                    = DMA_Channel_0,
+      .irq_vector                 = DMA1_Stream5_IRQn,
+      .complete_flags             = DMA_HISR_TCIF5,
+      .error_flags                = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 ),
+    },
+    .rx_dma =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream0,
+      .channel                    = DMA_Channel_0,
+      .irq_vector                 = DMA1_Stream0_IRQn,
+      .complete_flags             = DMA_LISR_TCIF0,
+      .error_flags                = ( DMA_LISR_TEIF0 | DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 ),
+    },
+  },
+  [WICED_SPI_4]  =
+  {
+    .port                         = SPI4,
+    .gpio_af                      = GPIO_AF_SPI4,
+    .peripheral_clock_reg         = RCC_APB2Periph_SPI4,
+    .peripheral_clock_func        = RCC_APB2PeriphClockCmd,
+    .pin_mosi                     = &platform_gpio_pins[WICED_GPIO_9],
+    .pin_miso                     = &platform_gpio_pins[WICED_GPIO_35],
+    .pin_clock                    = &platform_gpio_pins[WICED_GPIO_33],
+    .tx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream1,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA2_Stream1_IRQn,
+      .complete_flags             = DMA_LISR_TCIF1,
+      .error_flags                = ( DMA_LISR_TEIF1 | DMA_LISR_FEIF1 ),
+    },
+    .rx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream4,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA2_Stream4_IRQn,
+      .complete_flags             = DMA_HISR_TCIF4,
+      .error_flags                = ( DMA_HISR_TEIF4 | DMA_HISR_FEIF4 | DMA_HISR_DMEIF4 ),
+    },
+  },
+  [WICED_SPI_5]  =
+  {
+    .port                         = SPI5,
+    .gpio_af                      = GPIO_AF_SPI5,
+    .peripheral_clock_reg         = RCC_APB2Periph_SPI5,
+    .peripheral_clock_func        = RCC_APB2PeriphClockCmd,
+    .pin_mosi                     = &platform_gpio_pins[WICED_GPIO_31],
+    .pin_miso                     = &platform_gpio_pins[WICED_GPIO_27],
+    .pin_clock                    = &platform_gpio_pins[WICED_GPIO_37],
+    .tx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream6,
+      .channel                    = DMA_Channel_7,
+      .irq_vector                 = DMA2_Stream6_IRQn,
+      .complete_flags             = DMA_HISR_TCIF6,
+      .error_flags                = ( DMA_HISR_TEIF6 | DMA_HISR_FEIF6 ),
+    },
+    .rx_dma =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream5,
+      .channel                    = DMA_Channel_7,
+      .irq_vector                 = DMA2_Stream5_IRQn,
+      .complete_flags             = DMA_HISR_TCIF5,
+      .error_flags                = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 | DMA_HISR_DMEIF5 ),
+    },
+  }
+};
+
+
+/* UART peripherals and runtime drivers. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_uart_t platform_uart_peripherals[] =
+{
+  [WICED_UART_1] =
+  {
+    .port                         = USART1,
+    .tx_pin                       = &platform_gpio_pins[WICED_GPIO_30],
+    .rx_pin                       = &platform_gpio_pins[WICED_GPIO_29],
+    .cts_pin                      = NULL,
+    .rts_pin                      = NULL,
+    .tx_dma_config =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream7,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA2_Stream7_IRQn,
+      .complete_flags             = DMA_HISR_TCIF7,
+      .error_flags                = ( DMA_HISR_TEIF7 | DMA_HISR_FEIF7 ),
+    },
+    .rx_dma_config =
+    {
+      .controller                 = DMA2,
+      .stream                     = DMA2_Stream2,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA2_Stream2_IRQn,
+      .complete_flags             = DMA_LISR_TCIF2,
+      .error_flags                = ( DMA_LISR_TEIF2 | DMA_LISR_FEIF2 | DMA_LISR_DMEIF2 ),
+    },
+  },
+  [WICED_UART_2] =
+  {
+    .port                         = USART2,
+    .tx_pin                       = &platform_gpio_pins[WICED_GPIO_8],
+    .rx_pin                       = &platform_gpio_pins[WICED_GPIO_12],
+    .cts_pin                      = NULL,
+    .rts_pin                      = NULL,
+    .tx_dma_config =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream6,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA1_Stream6_IRQn,
+      .complete_flags             = DMA_HISR_TCIF6,
+      .error_flags                = ( DMA_HISR_TEIF6 | DMA_HISR_FEIF6 ),
+    },
+    .rx_dma_config =
+    {
+      .controller                 = DMA1,
+      .stream                     = DMA1_Stream5,
+      .channel                    = DMA_Channel_4,
+      .irq_vector                 = DMA1_Stream5_IRQn,
+      .complete_flags             = DMA_HISR_TCIF5,
+      .error_flags                = ( DMA_HISR_TEIF5 | DMA_HISR_FEIF5 | DMA_HISR_DMEIF5 ),
+    },
+  },
+};
+platform_uart_driver_t platform_uart_drivers[WICED_UART_MAX];
+
+/* I2S peripherals. Used by WICED/platform/MCU/STM32F4xx/peripherals/wiced_platform_common.c*/
+// NOTE: I don't have a clue if this is configured correctly. Use at own risk.
+const platform_i2s_t i2s_interfaces[] =
+{
+    [WICED_I2S_1] =
+    {
+        .spi                          = SPI2,
+#ifdef DAC_EXTERNAL_OSCILLATOR
+        .is_master                    = 0,
+        .enable_mclk                  = 0,
+#else /* DAC_EXTERNAL_OSCILLATOR */
+        .is_master                    = 1,
+        .enable_mclk                  = 1,
+#endif /* DAC_EXTERNAL_OSCILLATOR */
+        .gpio_af                      = GPIO_AF_SPI2,
+        .peripheral_clock             = RCC_APB1Periph_SPI2,
+        .peripheral_clock_func        = RCC_APB1PeriphClockCmd,
+        .pin_ck                       = &platform_gpio_pins[WICED_GPIO_17],
+        .pin_sd                       = &platform_gpio_pins[WICED_GPIO_8],
+        .pin_ws                       = &platform_gpio_pins[WICED_GPIO_18],
+        .pin_mclk                     = &platform_gpio_pins[WICED_GPIO_12],
+        .tx_dma.dma_register          = DMA1,
+        .tx_dma.stream                = DMA1_Stream4,
+        .tx_dma.channel               = DMA_Channel_0,
+        .tx_dma.peripheral_clock      = RCC_AHB1Periph_DMA1,
+        .tx_dma.peripheral_clock_func = RCC_AHB1PeriphClockCmd,
+        .tx_dma.irq                   = DMA1_Stream4_IRQn,
+        .rx_dma.dma_register          = DMA1,
+        .rx_dma.stream                = DMA1_Stream3,
+        .rx_dma.channel               = DMA_Channel_0,
+        .rx_dma.peripheral_clock      = RCC_AHB1Periph_DMA1,
+        .rx_dma.peripheral_clock_func = RCC_AHB1PeriphClockCmd,
+        .rx_dma.irq                   = DMA1_Stream3_IRQn,
+    }
+};
+
+/* I2C peripherals. Used by WICED/platform/MCU/wiced_platform_common.c */
+const platform_i2c_t platform_i2c_peripherals[] =
+{
+    [WICED_I2C_1] =
+    {
+        .port                    = I2C1,
+        .pin_scl                 = &platform_gpio_pins[WICED_GPIO_31],	// WICED_GPIO_30 works too, but
+																		// this one is connected to the
+																		// I2C bus on the dev board
+        .pin_sda                 = &platform_gpio_pins[WICED_GPIO_18],
+        .peripheral_clock_reg    = RCC_APB1Periph_I2C1,
+        .tx_dma                  = DMA1,
+        .tx_dma_peripheral_clock = RCC_AHB1Periph_DMA1,
+        .tx_dma_stream           = DMA1_Stream7,
+        .rx_dma_stream           = DMA1_Stream5,
+        .tx_dma_stream_id        = 7,
+        .rx_dma_stream_id        = 5,
+        .tx_dma_channel          = DMA_Channel_1,
+        .rx_dma_channel          = DMA_Channel_1,
+        .gpio_af                 = GPIO_AF_I2C1
+    },
+};
+
+#if defined ( WICED_PLATFORM_INCLUDES_SPI_FLASH )
+const wiced_spi_device_t wiced_spi_flash =
+{
+    .port        = WICED_SPI_1,
+    .chip_select = WICED_SPI_FLASH_CS,
+    .speed       = 20000000, // 50 MHz
+    .mode        = (SPI_CLOCK_RISING_EDGE | SPI_CLOCK_IDLE_HIGH | SPI_NO_DMA | SPI_MSB_FIRST),
+    .bits        = 8
+};
+#endif
+
+/* UART standard I/O configuration */
+#ifndef WICED_DISABLE_STDIO
+static platform_uart_config_t stdio_config =
+{
+    .baud_rate    = 115200,				// TODO: Check if this is valid for USART2
+    .data_width   = DATA_WIDTH_8BIT,
+    .parity       = NO_PARITY,
+    .stop_bits    = STOP_BITS_1,
+    .flow_control = FLOW_CONTROL_DISABLED,
+};
+#endif
+
+/* Wi-Fi control pins. Used by platform/MCU/wlan_platform_common.c
+* SDIO: EMW1062_PIN_BOOTSTRAP[1:0] = b'00
+* gSPI: EMW1062_PIN_BOOTSTRAP[1:0] = b'01
+*/
+const platform_gpio_t wifi_control_pins[] =
+{
+  [WWD_PIN_RESET]           = { GPIOB, 14 },
+};
+
+/* Wi-Fi SDIO bus pins. Used by platform/MCU/STM32F2xx/EMW1062_driver/wlan_SDIO.c */
+const platform_gpio_t wifi_sdio_pins[] =
+{
+  [WWD_PIN_SDIO_OOB_IRQ] = { GPIOA,  0 },
+  [WWD_PIN_SDIO_CLK    ] = { GPIOB, 15 },
+  [WWD_PIN_SDIO_CMD    ] = { GPIOA,  6 },
+  [WWD_PIN_SDIO_D0     ] = { GPIOB,  7 },
+  [WWD_PIN_SDIO_D1     ] = { GPIOA,  8 },
+  [WWD_PIN_SDIO_D2     ] = { GPIOA,  9 },
+  [WWD_PIN_SDIO_D3     ] = { GPIOB,  5 },
+};
+
+/******************************************************
+ *               Function Definitions
+ ******************************************************/
+
+void platform_init_peripheral_irq_priorities( void )
+{
+    /* Interrupt priority setup. Called by WICED/platform/MCU/STM32F2xx/platform_init.c */
+    NVIC_SetPriority( RTC_WKUP_IRQn    ,  1 ); /* RTC Wake-up event   */
+    NVIC_SetPriority( SDIO_IRQn        ,  2 ); /* WLAN SDIO           */
+    NVIC_SetPriority( DMA2_Stream3_IRQn,  3 ); /* WLAN SDIO DMA       */
+    NVIC_SetPriority( DMA1_Stream3_IRQn,  3 ); /* WLAN SPI DMA        */
+    NVIC_SetPriority( USART1_IRQn      ,  6 ); /* WICED_UART_1        */
+    NVIC_SetPriority( USART2_IRQn      ,  6 ); /* WICED_UART_2        */
+    NVIC_SetPriority( DMA2_Stream7_IRQn,  7 ); /* WICED_UART_1 TX DMA */
+    NVIC_SetPriority( DMA2_Stream2_IRQn,  7 ); /* WICED_UART_1 RX DMA */
+    NVIC_SetPriority( DMA1_Stream6_IRQn,  7 ); /* WICED_UART_2 TX DMA */
+    NVIC_SetPriority( DMA1_Stream5_IRQn,  7 ); /* WICED_UART_2 RX DMA */
+    NVIC_SetPriority( EXTI0_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI1_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI2_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI3_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI4_IRQn       , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI9_5_IRQn     , 14 ); /* GPIO                */
+    NVIC_SetPriority( EXTI15_10_IRQn   , 14 ); /* GPIO                */
+}
+
+void platform_init_external_devices( void )
+{
+    /*  This function initializes the external interfaces for the platform.
+        You could use this to initialize the peripherals you use.
+        Note however that if you initialize alternative functionality of 
+        JTAG and UART pins, you could lock yourself out of being able to flash
+        new firmware.
+    */
+
+    //patch added to resolve the microseconds delay hang issue.
+    do
+    {
+        // enable DWT hardware and cycle counting
+        CoreDebug->DEMCR = CoreDebug->DEMCR | CoreDebug_DEMCR_TRCENA_Msk;
+        // reset a counter
+        DWT->CYCCNT = 0;
+        // enable the counter
+        DWT->CTRL = (DWT->CTRL | DWT_CTRL_CYCCNTENA_Msk) ;
+    }
+    while(0);
+
+    /* Initialise button to input by default */
+    platform_gpio_init( &platform_gpio_pins[WICED_BUTTON1], INPUT_PULL_UP );
+
+#ifndef GPIO_LED_NOT_SUPPORTED
+    /* Initialise LEDs and turn off by default */
+    platform_gpio_init( &platform_gpio_pins[WICED_LED1], OUTPUT_PUSH_PULL );
+    platform_gpio_init( &platform_gpio_pins[WICED_LED2], OUTPUT_PUSH_PULL );
+    platform_gpio_output_low( &platform_gpio_pins[WICED_LED1] );
+    platform_gpio_output_low( &platform_gpio_pins[WICED_LED2] );
+#endif
+
+#ifndef WICED_DISABLE_STDIO
+    /* Initialise UART standard I/O */
+    platform_stdio_init( &platform_uart_drivers[STDIO_UART], &platform_uart_peripherals[STDIO_UART], &stdio_config );
+#endif
+}
+
+/* Checks if a factory reset is requested */
+wiced_bool_t platform_check_factory_reset( void )
+{
+    uint32_t factory_reset_counter = 0;
+#ifndef GPIO_LED_NOT_SUPPORTED
+    int led_state = 0;
+#endif
+
+    while (  ( 0 == platform_gpio_input_get( &platform_gpio_pins[ WICED_BUTTON1 ] ) )
+           &&( ( factory_reset_counter += PLATFORM_FACTORY_RESET_CHECK_PERIOD ) <= PLATFORM_FACTORY_RESET_TIMEOUT )
+           &&( WICED_SUCCESS == (wiced_result_t)host_rtos_delay_milliseconds( PLATFORM_FACTORY_RESET_CHECK_PERIOD ) )
+          )
+    {
+        /* Factory reset button is being pressed. */
+        /* User Must press it for 5 seconds to ensure it was not accidental */
+#ifndef GPIO_LED_NOT_SUPPORTED
+        /* Toggle LED every 100ms */
+
+        if ( led_state == 0 )
+        {
+            platform_gpio_output_high( &platform_gpio_pins[ WICED_LED1 ] );
+            led_state = 1;
+        }
+        else
+        {
+            platform_gpio_output_low( &platform_gpio_pins[ WICED_LED1 ] );
+            led_state = 0;
+        }
+#endif
+        if ( factory_reset_counter == 5000 )
+        {
+            return WICED_TRUE;
+        }
+    }
+    return WICED_FALSE;
+}
+
+uint32_t  platform_get_factory_reset_button_time ( uint32_t max_time )
+{
+    uint32_t button_press_timer = 0;
+    int led_state = 0;
+
+    /* Initialise input */
+     platform_gpio_init( &platform_gpio_pins[ PLATFORM_FACTORY_RESET_BUTTON_GPIO ], INPUT_PULL_UP );
+
+     while ( (PLATFORM_FACTORY_RESET_PRESSED_STATE == platform_gpio_input_get(&platform_gpio_pins[ PLATFORM_FACTORY_RESET_BUTTON_GPIO ])) )
+    {
+         /* How long is the "Factory Reset" button being pressed. */
+         host_rtos_delay_milliseconds( PLATFORM_FACTORY_RESET_CHECK_PERIOD );
+
+         /* Toggle LED every PLATFORM_FACTORY_RESET_CHECK_PERIOD  */
+        if ( led_state == 0 )
+        {
+            platform_gpio_output_high( &platform_gpio_pins[ PLATFORM_FACTORY_RESET_LED_GPIO ] );
+            led_state = 1;
+        }
+        else
+        {
+            platform_gpio_output_low( &platform_gpio_pins[ PLATFORM_FACTORY_RESET_LED_GPIO ] );
+            led_state = 0;
+        }
+
+        button_press_timer += PLATFORM_FACTORY_RESET_CHECK_PERIOD;
+        if ((max_time > 0) && (button_press_timer >= max_time))
+        {
+            break;
+        }
+    }
+
+     /* turn off the LED */
+     if (PLATFORM_FACTORY_RESET_LED_ON_STATE == 1)
+     {
+         platform_gpio_output_low( &platform_gpio_pins[ PLATFORM_FACTORY_RESET_LED_GPIO ] );
+     }
+     else
+     {
+         platform_gpio_output_high( &platform_gpio_pins[ PLATFORM_FACTORY_RESET_LED_GPIO ] );
+     }
+
+    return button_press_timer;
+}
+
+/******************************************************
+ *           Interrupt Handler Definitions
+ ******************************************************/
+
+WWD_RTOS_DEFINE_ISR( usart1_irq )
+{
+    platform_uart_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_irq )
+{
+    platform_uart_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart1_tx_dma_irq )
+{
+    platform_uart_tx_dma_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_tx_dma_irq )
+{
+    platform_uart_tx_dma_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart1_rx_dma_irq )
+{
+    platform_uart_rx_dma_irq( &platform_uart_drivers[WICED_UART_1] );
+}
+
+WWD_RTOS_DEFINE_ISR( usart2_rx_dma_irq )
+{
+    platform_uart_rx_dma_irq( &platform_uart_drivers[WICED_UART_2] );
+}
+
+/******************************************************
+ *            Interrupt Handlers Mapping
+ ******************************************************/
+
+/* These DMA assignments can be found STM32F2xx datasheet DMA section */
+WWD_RTOS_MAP_ISR( usart1_irq       , USART1_irq       )
+WWD_RTOS_MAP_ISR( usart1_tx_dma_irq, DMA2_Stream7_irq )
+WWD_RTOS_MAP_ISR( usart1_rx_dma_irq, DMA2_Stream2_irq )
+WWD_RTOS_MAP_ISR( usart2_irq       , USART2_irq       )
+WWD_RTOS_MAP_ISR( usart2_tx_dma_irq, DMA1_Stream6_irq )
+WWD_RTOS_MAP_ISR( usart2_rx_dma_irq, DMA1_Stream5_irq )
diff --git a/platforms/EMW3165/platform.h b/platforms/EMW3165/platform.h
new file mode 100644
index 0000000..73bb9ea
--- /dev/null
+++ b/platforms/EMW3165/platform.h
@@ -0,0 +1,341 @@
+/** @file
+ * Defines peripherals available for use on EMW3165 board
+ */
+#pragma once
+
+#ifdef __cplusplus
+extern "C"
+{
+#endif
+
+/******************************************************
+ *                      Macros
+ ******************************************************/
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+
+
+/******************************************************
+ *                   Enumerations
+ ******************************************************/
+
+/*
+EMW3165 on EMB-3165-A platform pin definitions ...
++-------------------------------------------------------------------------+
+| Enum ID       |Pin | STM32| Peripheral  |    Board     |   Peripheral   |
+|               | #  | Port | Available   |  Connection  |     Alias      |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 1  | NC   |             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_2  | 2  | B  2 |   GPIO      |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 3  |  NC  |             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_4  | 4  | A  7 | TIM1_CH1N   |              |                |
+|               |    |      | TIM3_CH2    |              |                |
+|               |    |      | SPI1_MOSI   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_5  | 5  | A  15| JTDI        |              |                |
+|               |    |      | TIM2_CH1    |              |                |
+|               |    |      | TIM2_ETR    |              |                |
+|               |    |      | SPI1_NSS    |              |                |
+|               |    |      | SPI3_NSS    |              |                |
+|               |    |      | USART1_TX   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_6  | 6  | B  3 | TIM2_CH2    |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | SPI1_SCK    |              |                |
+|               |    |      | USART1_RX   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_7  | 7  | B  4 | JTRST       |              |                |
+|               |    |      | GPIO        |              |                |
+|               |    |      | SDIO_D0     |              |                |
+|               |    |      | TIM3_CH1    |              |                |
+|               |    |      | SPI1_MISO   |              |                |
+|               |    |      | SPI3_MISO   |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_8  | 8  | A  2 | TIM2_CH3    |              |                |
+|               |    |      | TIM5_CH3    |              |                |
+|               |    |      | TIM9_CH1    |              |                |
+|               |    |      | USART2_TX   |              |                |
+|               |    |      | GPIO        |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_9  | 9  | A  1 | TIM2_CH2    |EasyLink_BUTTON|               |
+|               |    |      | TIM5_CH2    |              |                |
+|               |    |      | USART2_RTS  |              |                |
+|               |    |      | GPIO        |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 10 | VBAT |             |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 11 | NC   |             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_12 | 12 | A  3 | TIM2_CH4    |              |                |
+|               |    |      | TIM5_CH4    |              |                |
+|               |    |      | TIM9_CH2    |              |                |
+|               |    |      | USART2_RX   |              |                |
+|               |    |      | GPIO        |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 13 | NRST |             |              |  MICRO_RST_N   |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_14 | 14 | A 0  | WAKE_UP     |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+|               | 15 | NC   |             |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_16 | 16 | C 13 |     -       |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_17 | 17 | B 10 |  TIM2_CH3   | WICED_SYS_LED |                |
+|               |    |      |  I2C2_SCL   |              |                |
+|               |    |      |  GPIO       |              |                |
+|---------------+----+------+-------------+--------------+----------------|
+| WICED_GPIO_18 | 18 | B  9 | TIM4_CH4    |              |                |
+|               |    |      | TIM11_CH1   |              |                |
+|               |    |      | I2C1_SDA    |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_19 | 19 | B 12 | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 20 | GND  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 21 | GND  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_22 | 22 | B  3 |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_23 | 23 | A 15 | GPIO        |              |  JTAG_TDI      |
+|               |    |      | USART1_TX   |STDIO_UART_RX |  SPI1_SSN      |
+|               |    |      | TIM2_CH1    |              |                |
+|               |    |      | TIM2_ETR    |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_24 | 24 | B  4 |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_25 | 25 | A 14 | JTCK-SWCLK  |  SWCLK       |                |
+|               |    |      |  GPIO       |              |                |
++---------------+----+--------------------+--------------+----------------+
+|WICED_GPIO_26  | 26 | A 13 | JTMS-SWDIO  |  SWDIO       |                |
+|               |    |      |  GPIO       |              |                |
++---------------+----+--------------------+--------------+----------------+
+|WICED_GPIO_27  | 27 | A 12 | TIM1_ETR    |              |                |
+|               |    |      | USART1_RTS  |              |                |
+|               |    |      | USART6_RX   |              |                |
+|               |    |      | USB_FS_DP   |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 28 | NC   |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_29 | 29 | A 10 | GPIO        |              |                |
+|               |    |      | TIM1_CH3    |              |                |
+|               |    |      | USART1_RX   |              |                |
+|               |    |      | USB_FS_ID   |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_30 | 30 | B  6 | GPIO        |              |                |
+|               |    |      | TIM4_CH1    |              |                |
+|               |    |      | USART1_TX   |              |                |
+|               |    |      | I2C1_SCL    |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_SYS_LED | 31 | B  8 | GPIO        |              |                |
+|               |    |      | TIM4_CH3    |              |                |
+|               |    |      | TIM10_CH1   |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 32 |  NC  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_33 | 33 | B 13 | TIM1_CH1N   |              |                |
+|               |    |      | SPI2_SCK    |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_34 | 34 | A  5 | TIM2_CH1    |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_35 | 35 | A  11| TIM1_CH4    |              |                |
+|               |    |      | SPI4_MISO   |              |                |
+|               |    |      | USART1_CTS  |              |                |
+|               |    |      | USART6_TX   |              |                |
+|               |    |      | USB_FS_DM   |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_36 | 36 | B  1 | TIM1_CH3N   | BOOT_SEL     |                |
+|               |    |      | TIM3_CH4    |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_37 | 37 | B  0 | TIM1_CH2N   | MFG_SEL      |                |
+|               |    |      | TIM3_CH3    |              |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+| WICED_GPIO_38 | 38 | A  4 | USART2_CK   | WICED_RF_LED |                |
+|               |    |      | GPIO        |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 39 | VDD  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 40 | VDD  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+|               | 41 | ANT  |             |              |                |
++---------------+----+--------------------+--------------+----------------+
+*/
+
+// The MCU actually only supports 36 GPIOs, but this is handy.
+typedef enum
+{
+    WICED_GPIO_1,
+    WICED_GPIO_2,
+    WICED_GPIO_3,
+    WICED_GPIO_4,
+    WICED_GPIO_5,
+    WICED_GPIO_6,
+    WICED_GPIO_7,
+    WICED_GPIO_8,
+    WICED_GPIO_9,
+    WICED_GPIO_10,
+    WICED_GPIO_11,
+    WICED_GPIO_12,
+    WICED_GPIO_13,
+    WICED_GPIO_14,
+    WICED_GPIO_15,
+    WICED_GPIO_16,
+    WICED_GPIO_17,
+    WICED_GPIO_18,
+    WICED_GPIO_19,
+    WICED_GPIO_20,
+    WICED_GPIO_21,
+    WICED_GPIO_22,
+    WICED_GPIO_23,
+    WICED_GPIO_24,
+    WICED_GPIO_25,
+    WICED_GPIO_26,
+    WICED_GPIO_27,
+    WICED_GPIO_28,
+    WICED_GPIO_29,
+    WICED_GPIO_30,
+    WICED_GPIO_31,
+    WICED_GPIO_32,
+    WICED_GPIO_33,
+    WICED_GPIO_34,
+    WICED_GPIO_35,
+    WICED_GPIO_36,
+    WICED_GPIO_37,
+    WICED_GPIO_38,
+    WICED_GPIO_39,
+    WICED_GPIO_40,
+    WICED_GPIO_41,
+    WICED_GPIO_MAX, /* Denotes the total number of GPIO port aliases. Not a valid GPIO alias */
+    WICED_GPIO_32BIT = 0x7FFFFFFF,
+} wiced_gpio_t;
+
+// The datasheet says up to 5 SPIs
+typedef enum
+{
+    WICED_SPI_1,
+	WICED_SPI_2,
+	WICED_SPI_3,
+	WICED_SPI_4,
+	WICED_SPI_5,
+    WICED_SPI_MAX, /* Denotes the total number of SPI port aliases. Not a valid SPI alias */
+    WICED_SPI_32BIT = 0x7FFFFFFF,
+} wiced_spi_t;
+
+// The datasheet says up to 5 I2S
+typedef enum 
+{
+    WICED_I2S_1,
+	WICED_I2S_2,
+	WICED_I2S_3,
+	WICED_I2S_4,
+	WICED_I2S_5,
+    WICED_I2S_MAX,
+    WICED_I2S_32BIT = 0x7FFFFFFF,
+} wiced_i2s_t;
+
+// The datasheet says up to 3 I2C
+typedef enum
+{
+    WICED_I2C_1,
+	WICED_I2C_2,
+	WICED_I2C_3,
+    WICED_I2C_MAX,
+    WICED_I2C_32BIT = 0x7FFFFFFF,
+} wiced_i2c_t;
+
+// The datasheet says all 16 timers support PWM
+typedef enum
+{
+    WICED_PWM_1,
+    WICED_PWM_2,
+    WICED_PWM_3,
+    WICED_PWM_4,
+    WICED_PWM_5,
+    WICED_PWM_6,
+    WICED_PWM_7,
+    WICED_PWM_8,
+    WICED_PWM_9,
+	WICED_PWM_10,
+	WICED_PWM_11,
+	WICED_PWM_12,
+	WICED_PWM_13,
+	WICED_PWM_14,
+	WICED_PWM_15,
+	WICED_PWM_16,
+    WICED_PWM_MAX, /* Denotes the total number of PWM port aliases. Not a valid PWM alias */
+    WICED_PWM_32BIT = 0x7FFFFFFF,
+} wiced_pwm_t;
+
+// The datasheet says up to 10 ADCs with the WLCSP49 package
+typedef enum
+{
+    WICED_ADC_1,
+    WICED_ADC_2,
+    WICED_ADC_3,
+    WICED_ADC_4,
+    WICED_ADC_5,
+    WICED_ADC_6,
+    WICED_ADC_7,
+    WICED_ADC_8,
+    WICED_ADC_9,
+    WICED_ADC_10,
+    WICED_ADC_MAX, /* Denotes the total number of ADC port aliases. Not a valid ADC alias */
+    WICED_ADC_32BIT = 0x7FFFFFFF,
+} wiced_adc_t;
+
+// The datasheet says up to 3 USARTs, numbered 1, 2 and 6 for some reason...
+typedef enum
+{
+    WICED_UART_1,
+    WICED_UART_2,
+	WICED_UART_6,
+    WICED_UART_MAX, /* Denotes the total number of UART port aliases. Not a valid UART alias */
+    WICED_UART_32BIT = 0x7FFFFFFF,
+} wiced_uart_t;
+
+/******************************************************
+ *                    Constants
+ ******************************************************/
+
+/* UART port used for standard I/O */
+#define STDIO_UART ( WICED_UART_2 ) // WICED_UART_2 is STM32F411CE USART2 (defined in platform.c)
+									// Connected to the USB-UART chip on the MXCHIP devboard
+
+/* SPI flash is present on EMW3165 */
+#define WICED_PLATFORM_INCLUDES_SPI_FLASH
+#define WICED_SPI_FLASH_CS ( WICED_GPIO_5 )
+
+/* Components connected to external I/Os */
+#define WICED_LED1         ( WICED_GPIO_17 )    // system led on dev board
+#define WICED_LED2         ( WICED_GPIO_38 )    // rf led on dev board
+
+#define WICED_BUTTON1      ( WICED_GPIO_9 )		// Easylink button on dev board
+
+#define WICED_SWITCH1      ( WICED_GPIO_36 )	// BOOT switch on dev board
+#define WICED_SWITCH2      ( WICED_GPIO_37 )	// STATUS switch on dev board
+
+/*  Bootloader OTA/OTA2 LED to flash while "Factory Reset" button held */
+#define PLATFORM_FACTORY_RESET_LED_GPIO      ( WICED_LED1 )
+#define PLATFORM_FACTORY_RESET_LED_ON_STATE  ( WICED_ACTIVE_HIGH )
+
+/* Bootloader OTA and OTA2 factory reset during settings */
+#define PLATFORM_FACTORY_RESET_BUTTON_GPIO      ( WICED_BUTTON1 )
+#define PLATFORM_FACTORY_RESET_PRESSED_STATE    (   0  )
+#define PLATFORM_FACTORY_RESET_CHECK_PERIOD     (  100 )
+#define PLATFORM_FACTORY_RESET_TIMEOUT          ( 5000 )
+
+#ifdef __cplusplus
+} /*extern "C" */
+#endif
diff --git a/platforms/EMW3165/platform_config.h b/platforms/EMW3165/platform_config.h
new file mode 100644
index 0000000..9ce21f2
--- /dev/null
+++ b/platforms/EMW3165/platform_config.h
@@ -0,0 +1,49 @@
+#pragma once
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define CPU_CLOCK_HZ            (100000000 )
+
+#define HSE_SOURCE              ( RCC_HSE_ON )
+#define AHB_CLOCK_DIVIDER       ( RCC_SYSCLK_Div1 )
+#define APB1_CLOCK_DIVIDER      ( RCC_HCLK_Div2 )
+#define APB2_CLOCK_DIVIDER      ( RCC_HCLK_Div1 )
+#define PLL_SOURCE              ( RCC_PLLSource_HSE )
+#define PLL_M_CONSTANT          ( 26 )
+#define PLL_N_CONSTANT          ( 200 )
+#define PLL_P_CONSTANT          ( 2 )
+#define PLL_Q_CONSTANT          ( 4 )
+#define SYSTEM_CLOCK_SOURCE     ( RCC_SYSCLKSource_PLLCLK )
+#define SYSTICK_CLOCK_SOURCE    ( SysTick_CLKSource_HCLK )
+#define INT_FLASH_WAIT_STATE    ( FLASH_Latency_3 )
+#define PLATFORM_STM32_VOLTAGE_2V7_TO_3V6
+
+
+/******************************************************
+ *  Wi-Fi Options
+ ******************************************************/
+
+/*  GPIO pins are used to bootstrap Wi-Fi to SDIO or gSPI mode */
+#define WICED_WIFI_USE_GPIO_FOR_BOOTSTRAP_0
+#define WICED_WIFI_USE_GPIO_FOR_BOOTSTRAP_1
+ 
+/*  Wi-Fi GPIO0 pin is used for out-of-band interrupt */
+#define WICED_WIFI_OOB_IRQ_GPIO_PIN  ( 0 )
+
+/*  Wi-Fi power pin is present */
+//#define WICED_USE_WIFI_POWER_PIN
+ 
+/*  Wi-Fi reset pin is present */
+#define WICED_USE_WIFI_RESET_PIN
+
+/* */
+#define WICED_USE_WIFI_32K_CLOCK_MCO
+
+/*  OTA */
+#define PLATFORM_HAS_OTA
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
diff --git a/platforms/EMW3165/wifi_nvram_image.h b/platforms/EMW3165/wifi_nvram_image.h
new file mode 100644
index 0000000..bb0c486
--- /dev/null
+++ b/platforms/EMW3165/wifi_nvram_image.h
@@ -0,0 +1,92 @@
+/** @file
+ *  NVRAM variables which define BCM43362 Parameters for the
+ *  USI module used on the EMW3165 board
+ *
+ */
+
+#ifndef INCLUDED_NVRAM_IMAGE_H_
+#define INCLUDED_NVRAM_IMAGE_H_
+
+#include <string.h>
+#include <stdint.h>
+#include "../generated_mac_address.txt"
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/**
+ * Character array of NVRAM image
+ */
+
+static const char wifi_nvram_image[] =
+        "manfid=0x2d0"                                                       "\x00"
+        "prodid=0x492"                                                       "\x00"
+        "vendid=0x14e4"                                                      "\x00"
+        "devid=0x4343"                                                       "\x00"
+        "boardtype=0x05a0"                                                   "\x00"
+        "boardrev=0x1301"                                                    "\x00" /*Board Revision is REV3.1*/
+        "boardnum=777"                                                       "\x00"
+        "xtalfreq=26000"                                                     "\x00"
+        "boardflags=0xa00"                                                   "\x00"
+        "sromrev=3"                                                          "\x00"
+        "wl0id=0x431b"                                                       "\x00"
+        NVRAM_GENERATED_MAC_ADDRESS                                          "\x00"
+        "aa2g=3"                                                             "\x00"
+        "ag0=2"                                                              "\x00"
+        "maxp2ga0=68"                                                        "\x00"
+        "ofdm2gpo=0x44444444"                                                "\x00"
+        "mcs2gpo0=0x3333"                                                    "\x00"
+        "mcs2gpo1=0x6333"                                                    "\x00"
+        "pa0maxpwr=80"                                                       "\x00"
+        "pa0b0=0x133E"                                                       "\x00"
+        "pa0b1=0xFDBA"                                                       "\x00"
+        "pa0b2=0xFF53"                                                       "\x00"
+        "pa0itssit=62"                                                       "\x00"
+        "pa1itssit=62"                                                       "\x00"
+        "temp_based_dutycy_en=1"                                             "\x00"
+        "tx_duty_cycle_ofdm=100"                                             "\x00"
+        "tx_duty_cycle_cck=100"                                              "\x00"
+        "tx_ofdm_temp_0=115"                                                 "\x00"
+        "tx_cck_temp_0=115"                                                  "\x00"
+        "tx_ofdm_dutycy_0=40"                                                "\x00"
+        "tx_cck_dutycy_0=40"                                                 "\x00"
+        "tx_ofdm_temp_1=255"                                                 "\x00"
+        "tx_cck_temp_1=255"                                                  "\x00"
+        "tx_ofdm_dutycy_1=40"                                                "\x00"
+        "tx_cck_dutycy_1=40"                                                 "\x00"
+        "tx_tone_power_index=40"                                             "\x00"
+        "tx_tone_power_index.fab.3=48"                                       "\x00"
+        "cckPwrOffset=0"                                                     "\x00"
+        "ccode=0"                                                            "\x00"
+        "rssismf2g=0xa"                                                      "\x00"
+        "rssismc2g=0x3"                                                      "\x00"
+        "rssisav2g=0x7"                                                      "\x00"
+        "triso2g=0"                                                          "\x00"
+        "noise_cal_enable_2g=0"                                              "\x00"
+        "noise_cal_po_2g=0"                                                  "\x00"
+        "noise_cal_po_2g.fab.3=-2"                                           "\x00"
+        "swctrlmap_2g=0x050c050c,0x030a030a,0x030a030a,0x0,0x1ff"            "\x00"
+        "temp_add=29767"                                                     "\x00"
+        "temp_mult=425"                                                      "\x00"
+        "temp_q=10"                                                          "\x00"
+        "initxidx2g=45"                                                      "\x00"
+        "tssitime=1"                                                         "\x00"
+        "rfreg033=0x19"                                                      "\x00"
+        "rfreg033_cck=0x1f"                                                  "\x00"
+        "cckPwrIdxCorr=-8"                                                   "\x00"
+        "spuravoid_enable2g=1"                                               "\x00"
+        "edonthd=-70"                                                        "\x00"
+        "edoffthd=-76"                                                       "\x00"
+        "\x00\x00";
+
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
+#else /* ifndef INCLUDED_NVRAM_IMAGE_H_ */
+
+#error Wi-Fi NVRAM image included twice
+
+#endif /* ifndef INCLUDED_NVRAM_IMAGE_H_ */
diff --git a/tools/OpenOCD/jlink_swd.cfg b/tools/OpenOCD/jlink_swd.cfg
new file mode 100644
index 0000000..62157cb
--- /dev/null
+++ b/tools/OpenOCD/jlink_swd.cfg
@@ -0,0 +1,13 @@
+# Segger J-Link
+#
+# http://www.segger.com/jlink.html
+#
+
+interface jlink
+transport select swd
+
+# Added for the EMW3162 project, might not be needed though.
+reset_config trst_push_pull srst_push_pull trst_and_srst
+# End of edit for EMW3162 project
+
+
diff --git a/tools/OpenOCD/mem_helper.tcl b/tools/OpenOCD/mem_helper.tcl
new file mode 100644
index 0000000..a3d92cb
--- /dev/null
+++ b/tools/OpenOCD/mem_helper.tcl
@@ -0,0 +1,22 @@
+# Helper for common memory read/modify/write procedures
+
+# mrw: "memory read word", returns value of $reg
+proc mrw {reg} {
+	set value ""
+	mem2array value 32 $reg 1
+	return $value(0)
+}
+
+add_usage_text mrw "address"
+add_help_text mrw "Returns value of word in memory."
+
+# mmw: "memory modify word", updates value of $reg
+#       $reg <== ((value & ~$clearbits) | $setbits)
+proc mmw {reg setbits clearbits} {
+	set old [mrw $reg]
+	set new [expr ($old & ~$clearbits) | $setbits]
+	mww $reg $new
+}
+
+add_usage_text mmw "address setbits clearbits"
+add_help_text mmw "Modify word in memory. new_val = (old_val & ~clearbits) | setbits;"
diff --git a/tools/OpenOCD/memory.tcl b/tools/OpenOCD/memory.tcl
new file mode 100644
index 0000000..2719d3f
--- /dev/null
+++ b/tools/OpenOCD/memory.tcl
@@ -0,0 +1,133 @@
+# MEMORY
+#
+# All Memory regions have two components.
+#    (1) A count of regions, in the form N_NAME
+#    (2) An array within info about each region.
+#
+# The ARRAY
+#
+#       <NAME>(  RegionNumber ,  ATTRIBUTE )
+#
+# Where <NAME> is one of:
+#
+#     N_FLASH  & FLASH   (internal memory)
+#     N_RAM    & RAM     (internal memory)
+#     N_MMREGS & MMREGS  (for memory mapped registers)
+#     N_XMEM   & XMEM    (off chip memory, ie: flash on cs0, sdram on cs2)
+# or  N_UNKNOWN & UNKNOWN for things that do not exist.
+#
+# We have 1 unknown region.
+set N_UNKNOWN 1
+# All MEMORY regions must have these attributes
+#     CS          - chip select (if internal, use -1)
+set UNKNOWN(0,CHIPSELECT) -1
+#     BASE        - base address in memory
+set UNKNOWN(0,BASE)       0
+#     LEN         - length in bytes
+set UNKNOWN(0,LEN)        $CPU_MAX_ADDRESS
+#     HUMAN       - human name of the region
+set UNKNOWN(0,HUMAN) "unknown"
+#     TYPE        - one of:
+#                       flash, ram, mmr, unknown
+#                    For harvard arch:
+#                       iflash, dflash, iram, dram
+set UNKNOWN(0,TYPE)       "unknown"
+#     RWX         - access ablity
+#                       unix style chmod bits
+#                           0 - no access
+#                           1 - execute
+#                           2 - write
+#                           4 - read
+#                       hence: 7 - readwrite execute
+set RWX_NO_ACCESS     0
+set RWX_X_ONLY        $BIT0
+set RWX_W_ONLY        $BIT1
+set RWX_R_ONLY        $BIT2
+set RWX_RW            [expr $RWX_R_ONLY + $RWX_W_ONLY]
+set RWX_R_X           [expr $RWX_R_ONLY + $RWX_X_ONLY]
+set RWX_RWX           [expr $RWX_R_ONLY + $RWX_W_ONLY + $RWX_X_ONLY]
+set UNKNOWN(0,RWX)     $RWX_NO_ACCESS
+
+#     WIDTH       - access width
+#                      8,16,32 [0 means ANY]
+set ACCESS_WIDTH_NONE 0
+set ACCESS_WIDTH_8    $BIT0
+set ACCESS_WIDTH_16   $BIT1
+set ACCESS_WIDTH_32   $BIT2
+set ACCESS_WIDTH_ANY  [expr $ACCESS_WIDTH_8 + $ACCESS_WIDTH_16 + $ACCESS_WIDTH_32]
+set UNKNOWN(0,ACCESS_WIDTH) $ACCESS_WIDTH_NONE
+
+proc iswithin { ADDRESS BASE LEN } {
+    return [expr ((($ADDRESS - $BASE) > 0) && (($ADDRESS - $BASE + $LEN) > 0))]
+}
+
+proc address_info { ADDRESS } {
+
+    foreach WHERE { FLASH RAM MMREGS XMEM UNKNOWN } {
+	if { info exists $WHERE } {
+	    set lmt [set N_[set WHERE]]
+	    for { set region 0 } { $region < $lmt } { incr region } {
+		if { iswithin $ADDRESS $WHERE($region,BASE) $WHERE($region,LEN) } {
+		    return  "$WHERE $region";
+		}
+	    }
+	}
+    }
+
+    # Return the 'unknown'
+    return "UNKNOWN 0"
+}
+
+proc memread32 {ADDR} {
+    set foo(0) 0
+    if ![ catch { mem2array foo 32 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memread32: $msg"
+    }
+}
+
+proc memread16 {ADDR} {
+    set foo(0) 0
+    if ![ catch { mem2array foo 16 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memread16: $msg"
+    }
+}
+
+proc memread8 {ADDR} {
+    set foo(0) 0
+    if ![ catch { mem2array foo 8 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memread8: $msg"
+    }
+}
+
+proc memwrite32 {ADDR DATA} {
+    set foo(0) $DATA
+    if ![ catch { array2mem foo 32 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memwrite32: $msg"
+    }
+}
+
+proc memwrite16 {ADDR DATA} {
+    set foo(0) $DATA
+    if ![ catch { array2mem foo 16 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memwrite16: $msg"
+    }
+}
+
+proc memwrite8 {ADDR DATA} {
+    set foo(0) $DATA
+    if ![ catch { array2mem foo 8 $ADDR 1  } msg ] {
+	return $foo(0)
+    } else {
+	error "memwrite8: $msg"
+    }
+}
diff --git a/tools/OpenOCD/mmr_helpers.tcl b/tools/OpenOCD/mmr_helpers.tcl
new file mode 100644
index 0000000..ce116e4
--- /dev/null
+++ b/tools/OpenOCD/mmr_helpers.tcl
@@ -0,0 +1,72 @@
+
+proc proc_exists { NAME } {
+    set n [info commands $NAME]
+    set l [string length $n]
+    return [expr $l != 0]
+}
+
+# Give: REGISTER name - must be a global variable.
+proc show_mmr32_reg { NAME } {
+
+    global $NAME
+    # we want $($NAME)
+    set a [set [set NAME]]
+
+    if ![catch { set v [memread32 $a] } msg ] {
+	echo [format "%15s: (0x%08x): 0x%08x" $NAME $a $v]
+
+	# Was a helper defined?
+	set fn show_${NAME}_helper
+	if [ proc_exists $fn ] {
+	    # Then call it
+	    $fn $NAME $a $v
+	}
+	return $v;
+    } else {
+	error [format "%s (%s)" $msg $NAME ]
+    }
+}
+
+
+# Give: NAMES - an array of names accessable
+#               in the callers symbol-scope.
+#       VAL - the bits to display.
+
+proc show_mmr32_bits { NAMES VAL } {
+
+    upvar $NAMES MYNAMES
+
+    set w 5
+    foreach {IDX N} $MYNAMES {
+	set l [string length $N]
+	if { $l > $w } { set w $l }
+    }
+
+    for { set x 24 } { $x >= 0 } { incr x -8 } {
+	echo -n "  "
+	for { set y 7 } { $y >= 0 } { incr y -1 } {
+	    set s $MYNAMES([expr $x + $y])
+	    echo -n [format "%2d: %-*s | " [expr $x + $y] $w $s ]
+	}
+	echo ""
+
+	echo -n "  "
+	for { set y 7 } { $y >= 0 } { incr y -1 } {
+	    echo -n [format "    %d%*s | " [expr !!($VAL & (1 << ($x + $y)))] [expr $w -1] ""]
+	}
+	echo ""
+    }
+}
+
+
+proc show_mmr_bitfield { MSB LSB VAL FIELDNAME FIELDVALUES } {
+    set width [expr (($MSB - $LSB + 1) + 7) / 4]
+    set nval [show_normalize_bitfield $VAL $MSB $LSB ]
+    set name0 [lindex $FIELDVALUES 0 ]
+    if [ string compare $name0 _NUMBER_ ] {
+	set sval [lindex $FIELDVALUES $nval]
+    } else {
+	set sval ""
+    }
+    echo [format "%-15s: %d (0x%0*x) %s" $FIELDNAME $nval $width $nval $sval ]
+}
diff --git a/tools/OpenOCD/stlink-v2-1.cfg b/tools/OpenOCD/stlink-v2-1.cfg
new file mode 100644
index 0000000..093e801
--- /dev/null
+++ b/tools/OpenOCD/stlink-v2-1.cfg
@@ -0,0 +1,16 @@
+#
+# STMicroelectronics ST-LINK/V2-1 in-circuit debugger/programmer
+#
+
+interface hla
+hla_layout stlink
+hla_device_desc "ST-LINK/V2-1"
+hla_vid_pid 0x0483 0x374b
+
+# Optionally specify the serial number of ST-LINK/V2 usb device.  ST-LINK/V2
+# devices seem to have serial numbers with unreadable characters.  ST-LINK/V2
+# firmware version >= V2.J21.S4 recommended to avoid issues with adapter serial
+# number reset issues.
+# eg.
+#hla_serial "\xaa\xbc\x6e\x06\x50\x75\xff\x55\x17\x42\x19\x3f"
+
diff --git a/tools/OpenOCD/stlink-v2.cfg b/tools/OpenOCD/stlink-v2.cfg
new file mode 100644
index 0000000..ae545a1
--- /dev/null
+++ b/tools/OpenOCD/stlink-v2.cfg
@@ -0,0 +1,16 @@
+#
+# STMicroelectronics ST-LINK/V2 in-circuit debugger/programmer
+#
+
+interface hla
+hla_layout stlink
+hla_device_desc "ST-LINK/V2"
+hla_vid_pid 0x0483 0x3748
+
+# Optionally specify the serial number of ST-LINK/V2 usb device.  ST-LINK/V2
+# devices seem to have serial numbers with unreadable characters.  ST-LINK/V2
+# firmware version >= V2.J21.S4 recommended to avoid issues with adapter serial
+# number reset issues.
+# eg.
+#hla_serial "\xaa\xbc\x6e\x06\x50\x75\xff\x55\x17\x42\x19\x3f"
+
diff --git a/tools/OpenOCD/stm32f2x-flash-app.cfg b/tools/OpenOCD/stm32f2x-flash-app.cfg
index 8c3d12c..a986243 100644
--- a/tools/OpenOCD/stm32f2x-flash-app.cfg
+++ b/tools/OpenOCD/stm32f2x-flash-app.cfg
@@ -1,10 +1,2 @@
-#
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
-#
 init
+reset halt
diff --git a/tools/OpenOCD/stm32f2x.cfg b/tools/OpenOCD/stm32f2x.cfg
index 3040d6b..5679f72 100644
--- a/tools/OpenOCD/stm32f2x.cfg
+++ b/tools/OpenOCD/stm32f2x.cfg
@@ -1,36 +1,28 @@
+# script for stm32f2x family
+
 #
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
+# stm32 devices support both JTAG and SWD transports.
 #
-# script for stm32f2xxx
+source [find tools/OpenOCD/swj-dp.tcl]
+source [find tools/OpenOCD/mem_helper.tcl]
 
 set CHIP_FLASH_START 0x08000000
 set CHIP_RAM_START   0x20000000
 
-
 if { [info exists CHIPNAME] } {
-   set  _CHIPNAME $CHIPNAME
+   set _CHIPNAME $CHIPNAME
 } else {
-   set  _CHIPNAME stm32f2xxx
+   set _CHIPNAME stm32f2x
 }
 
-if { [info exists ENDIAN] } {
-   set  _ENDIAN $ENDIAN
-} else {
-   set  _ENDIAN little
-}
+set _ENDIAN little
 
 # Work-area is a space in RAM used for flash programming
 # By default use 64kB
 if { [info exists WORKAREASIZE] } {
-   set  _WORKAREASIZE $WORKAREASIZE
+   set _WORKAREASIZE $WORKAREASIZE
 } else {
-   set  _WORKAREASIZE 0x10000
+   set _WORKAREASIZE 0x10000
 }
 
 # JTAG speed should be <= F_CPU/6. F_CPU after reset is 8MHz, so use F_JTAG = 1MHz
@@ -42,64 +34,66 @@ if { [info exists WORKAREASIZE] } {
 adapter_khz 1000
 
 adapter_nsrst_delay 100
-jtag_ntrst_delay 100
+if {[using_jtag]} {
+ jtag_ntrst_delay 100
+}
 
 #jtag scan chain
-if { [info exists CPUTAPID ] } {
+if { [info exists CPUTAPID] } {
    set _CPUTAPID $CPUTAPID
 } else {
-  # See STM Document RM0033
-  # Section 32.6.3 - corresponds to Cortex-M3 r2p0
-   set _CPUTAPID 0x4ba00477
+   if { [using_jtag] } {
+      # See STM Document RM0033
+      # Section 32.6.3 - corresponds to Cortex-M3 r2p0
+      set _CPUTAPID 0x4ba00477
+   } {
+      set _CPUTAPID 0x2ba01477
+   }
 }
-jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
 
-if { [info exists BSTAPID ] } {
+swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
+
+if { [info exists BSTAPID] } {
    set _BSTAPID $BSTAPID
 } else {
   # See STM Document RM0033
   # Section 32.6.2
-  #
+  # 
   set _BSTAPID 0x06411041
 }
-jtag newtap $_CHIPNAME bs -irlen 5 -expected-id $_BSTAPID
 
-set _TARGETNAME $_CHIPNAME.cpu
-target create $_TARGETNAME cortex_m3 -endian $_ENDIAN -chain-position $_TARGETNAME
+if {[using_jtag]} {
+ swj_newdap $_CHIPNAME bs -irlen 5 -expected-id $_BSTAPID
+}
 
-$_TARGETNAME configure -work-area-phys $CHIP_RAM_START -work-area-size $_WORKAREASIZE -work-area-backup 0 -rtos auto -rtos-wipe
+set _TARGETNAME $_CHIPNAME.cpu
+target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_TARGETNAME
 
-#shutdown OpenOCD daemon when gdb detaches
-$_TARGETNAME configure -event gdb-detach { mww 0xE0042008 0x00000000; soft_reset_halt; sleep 5; resume; shutdown }
+$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0
 
 set _FLASHNAME $_CHIPNAME.flash
 flash bank $_FLASHNAME stm32f2x 0 0 0 0 $_TARGETNAME
 
-# if srst is not fitted use SYSRESETREQ to
-# perform a soft reset
-#cortex_m3 reset_config srst
-
-
-proc jtag_init {} {
-    global _TARGETNAME
-
-    # assert both resets; equivalent to power-on reset
-    jtag_reset 1 1
-    sleep 1
-    jtag_reset 0 1
+#reset_config srst_nogate
 
-    # Examine scanchain
-    jtag arp_init
-
-    $_TARGETNAME arp_examine
-
-    # Force STM32 to allow debugging whilst sleeping and in stop-mode
-    mww 0xE0042004 3
+if {![using_hla]} {
+   # if srst is not fitted use SYSRESETREQ to
+   # perform a soft reset
+  cortex_m reset_config sysresetreq
+}
 
-    # Set flags to cause timer based peripherals to stop during breakpoints.
-    mww 0xE0042008 0xffffffff
+$_TARGETNAME configure -event examine-end {
+	# DBGMCU_CR |= DBG_STANDBY | DBG_STOP | DBG_SLEEP
+	mmw 0xE0042004 0x00000007 0
 
+	# Stop watchdog counters during halt
+	# DBGMCU_APB1_FZ = DBG_IWDG_STOP | DBG_WWDG_STOP
+	mww 0xE0042008 0x00001800
+}
 
-    reset halt
-    poll on
+$_TARGETNAME configure -event trace-config {
+	# Set TRACE_IOEN; TRACE_MODE is set to async; when using sync
+	# change this value accordingly to configure trace pins
+	# assignment
+	mmw 0xE0042004 0x00000020 0
 }
diff --git a/tools/OpenOCD/stm32f2x_gdb_jtag.cfg b/tools/OpenOCD/stm32f2x_gdb_jtag.cfg
index 55c5114..c81f5cd 100644
--- a/tools/OpenOCD/stm32f2x_gdb_jtag.cfg
+++ b/tools/OpenOCD/stm32f2x_gdb_jtag.cfg
@@ -1,12 +1,3 @@
-#
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
-#
 # default ports
 telnet_port 4444
 gdb_port 3333
diff --git a/tools/OpenOCD/stm32f4x-flash-app.cfg b/tools/OpenOCD/stm32f4x-flash-app.cfg
index 8c3d12c..a986243 100644
--- a/tools/OpenOCD/stm32f4x-flash-app.cfg
+++ b/tools/OpenOCD/stm32f4x-flash-app.cfg
@@ -1,10 +1,2 @@
-#
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
-#
 init
+reset halt
diff --git a/tools/OpenOCD/stm32f4x.cfg b/tools/OpenOCD/stm32f4x.cfg
index 5f7a518..098df6b 100644
--- a/tools/OpenOCD/stm32f4x.cfg
+++ b/tools/OpenOCD/stm32f4x.cfg
@@ -1,105 +1,111 @@
+# script for stm32f4x family
+
 #
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
+# stm32 devices support both JTAG and SWD transports.
 #
-# script for stm32f4xx
+source [find tools/OpenOCD/swj-dp.tcl]
+source [find tools/OpenOCD/mem_helper.tcl]
 
 set CHIP_FLASH_START 0x08000000
 set CHIP_RAM_START   0x20000000
 
-
 if { [info exists CHIPNAME] } {
-   set  _CHIPNAME $CHIPNAME
+   set _CHIPNAME $CHIPNAME
 } else {
-   set  _CHIPNAME stm32f4xx
+   set _CHIPNAME stm32f4x
 }
 
-if { [info exists ENDIAN] } {
-   set  _ENDIAN $ENDIAN
-} else {
-   set  _ENDIAN little
-}
+set _ENDIAN little
 
 # Work-area is a space in RAM used for flash programming
 # By default use 64kB
 if { [info exists WORKAREASIZE] } {
-   set  _WORKAREASIZE $WORKAREASIZE
+   set _WORKAREASIZE $WORKAREASIZE
 } else {
-   set  _WORKAREASIZE 0x10000
+   set _WORKAREASIZE 0x10000
 }
 
-# JTAG speed should be <= F_CPU/6. F_CPU after reset is 8MHz, so use F_JTAG = 1MHz
-#
-# Since we may be running of an RC oscilator, we crank down the speed a
-# bit more to be on the safe side. Perhaps superstition, but if are
-# running off a crystal, we can run closer to the limit. Note
-# that there can be a pretty wide band where things are more or less stable.
 adapter_khz 1000
 
 adapter_nsrst_delay 100
-jtag_ntrst_delay 100
+if {[using_jtag]} {
+ jtag_ntrst_delay 100
+}
 
 #jtag scan chain
-if { [info exists CPUTAPID ] } {
+if { [info exists CPUTAPID] } {
    set _CPUTAPID $CPUTAPID
 } else {
-  # See STM Document RM0033
-  # Section 32.6.3 - corresponds to Cortex-M3 r2p0
-   set _CPUTAPID 0x4ba00477
+   if { [using_jtag] } {
+      # See STM Document RM0090
+      # Section 38.6.3 - corresponds to Cortex-M4 r0p1
+      set _CPUTAPID 0x4ba00477
+   } {
+      set _CPUTAPID 0x2ba01477
+   }
 }
-jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
 
-if { [info exists BSTAPID ] } {
+swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
+
+if { [info exists BSTAPID] } {
    set _BSTAPID $BSTAPID
 } else {
-  # See STM Document RM0033
-  # Section 32.6.2
-  #
-  set _BSTAPID 0x06413041
+  # See STM Document RM0090
+  # Section 38.6.2
+  # STM32F405xx/07xx and STM32F415xx/17xx
+  set _BSTAPID1 0x06413041
+  # STM32F42xxx and STM32F43xxx
+  set _BSTAPID2 0x06419041
+  # See STM Document RM0368 (Rev. 3)
+  # STM32F401B/C
+  set _BSTAPID3 0x06423041
+  # STM32F401D/E
+  set _BSTAPID4 0x06433041
+  # See STM Document RM0383 (Rev 2)
+  # STM32F411
+  set _BSTAPID5 0x06431041
 }
-jtag newtap $_CHIPNAME bs -irlen 5 -expected-id $_BSTAPID
 
-set _TARGETNAME $_CHIPNAME.cpu
-target create $_TARGETNAME cortex_m3 -endian $_ENDIAN -chain-position $_TARGETNAME
+if {[using_jtag]} {
+ swj_newdap $_CHIPNAME bs -irlen 5 -expected-id $_BSTAPID1 \
+     -expected-id $_BSTAPID2 -expected-id $_BSTAPID3 \
+     -expected-id $_BSTAPID4 -expected-id $_BSTAPID5
+}
 
-$_TARGETNAME configure -work-area-phys $CHIP_RAM_START -work-area-size $_WORKAREASIZE -work-area-backup 0 -rtos auto -rtos-wipe
+set _TARGETNAME $_CHIPNAME.cpu
+target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_TARGETNAME
 
-#shutdown OpenOCD daemon when gdb detaches
-$_TARGETNAME configure -event gdb-detach { mww 0xE0042008 0x00000000; soft_reset_halt; sleep 5; resume; shutdown }
+$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0
 
 set _FLASHNAME $_CHIPNAME.flash
 flash bank $_FLASHNAME stm32f2x 0 0 0 0 $_TARGETNAME
 
-# if srst is not fitted use SYSRESETREQ to
-# perform a soft reset
-#cortex_m3 reset_config srst
-
-
-proc jtag_init {} {
-    global _TARGETNAME
-
-    # assert both resets; equivalent to power-on reset
-    jtag_reset 1 1
-    sleep 1
-    jtag_reset 0 1
-
-    # Examine scanchain
-    jtag arp_init
+adapter_nsrst_delay 100
+if {[using_jtag]} {
+ jtag_ntrst_delay 100
+}
 
-    $_TARGETNAME arp_examine
+#reset_config srst_nogate
 
-    # Force STM32 to allow debugging whilst sleeping and in stop-mode
-    mww 0xE0042004 3
+if {![using_hla]} {
+   # if srst is not fitted use SYSRESETREQ to
+   # perform a soft reset
+   cortex_m reset_config sysresetreq
+}
 
-    # Set flags to cause timer based peripherals to stop during breakpoints.
-    mww 0xE0042008 0xffffffff
+$_TARGETNAME configure -event examine-end {
+	# DBGMCU_CR |= DBG_STANDBY | DBG_STOP | DBG_SLEEP
+	mmw 0xE0042004 0x00000007 0
 
+	# Stop watchdog counters during halt
+	# DBGMCU_APB1_FZ = DBG_IWDG_STOP | DBG_WWDG_STOP
+	mww 0xE0042008 0x00001800
+}
 
-    reset halt
-    poll on
+$_TARGETNAME configure -event trace-config {
+	# Set TRACE_IOEN; TRACE_MODE is set to async; when using sync
+	# change this value accordingly to configure trace pins
+	# assignment
+	mmw 0xE0042004 0x00000020 0
 }
+
diff --git a/tools/OpenOCD/stm32f4x_gdb_jtag.cfg b/tools/OpenOCD/stm32f4x_gdb_jtag.cfg
index 55c5114..54403a2 100644
--- a/tools/OpenOCD/stm32f4x_gdb_jtag.cfg
+++ b/tools/OpenOCD/stm32f4x_gdb_jtag.cfg
@@ -1,16 +1,6 @@
-#
-# Copyright 2015, Broadcom Corporation
-# All Rights Reserved.
-#
-# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
-# the contents of this file may not be disclosed to third parties, copied
-# or duplicated in any form, in whole or in part, without the prior
-# written permission of Broadcom Corporation.
-#
 # default ports
 telnet_port 4444
 gdb_port 3333
 gdb_memory_map enable
 
 init
-
diff --git a/tools/OpenOCD/swj-dp.tcl b/tools/OpenOCD/swj-dp.tcl
new file mode 100644
index 0000000..1d274cb
--- /dev/null
+++ b/tools/OpenOCD/swj-dp.tcl
@@ -0,0 +1,34 @@
+# ARM Debug Interface V5 (ADI_V5) utility
+# ... Mostly for SWJ-DP (not SW-DP or JTAG-DP, since
+# SW-DP and JTAG-DP targets don't need to switch based
+# on which transport is active.
+#
+# declare a JTAG or SWD Debug Access Point (DAP)
+# based on the transport in use with this session.
+# You can't access JTAG ops when SWD is active, etc.
+
+# params are currently what "jtag newtap" uses
+# because OpenOCD internals are still strongly biased
+# to JTAG ....  but for SWD, "irlen" etc are ignored,
+# and the internals work differently
+
+# for now, ignore non-JTAG and non-SWD transports
+# (e.g. initial flash programming via SPI or UART)
+
+# split out "chip" and "tag" so we can someday handle
+# them more uniformly irlen too...)
+
+if [catch {transport select}] {
+  echo "Error: unable to select a session transport. Can't continue."
+  shutdown
+}
+
+proc swj_newdap {chip tag args} {
+ if [using_hla] {
+     eval hla newtap $chip $tag $args
+ } elseif [using_jtag] {
+     eval jtag newtap $chip $tag $args
+ } elseif [using_swd] {
+     eval swd newdap $chip $tag $args
+ }
+}
-- 
1.8.0.msysgit.0

