diff -Naur libusb-win32-src-1.2.6.0/Makefile libusb-win32-src-1.2.6.0_fixed/Makefile
--- libusb-win32-src-1.2.6.0/Makefile	2011-07-07 16:22:58 +0100
+++ libusb-win32-src-1.2.6.0_fixed/Makefile	2014-04-17 10:05:10 +0100
@@ -61,6 +61,7 @@
 TARGET = libusb
 DLL_TARGET = $(TARGET)0
 LIB_TARGET = $(TARGET)
+STATIC_LIB_TARGET = $(TARGET)
 DRIVER_TARGET = $(TARGET)0.sys
 INSTALL_DIR = /usr
 VPATH = .:./src:./src/driver:./tests
@@ -141,6 +142,16 @@
 %.2.o: %.rc
 	$(WINDRES) $(CPPFLAGS) $(WINDRES_FLAGS) $< -o $@
 
+static_lib: STATIC_ARFLAGS = -rcs
+static_lib: STATIC_CFLAGS = $(CFLAGS) -DLOG_APPNAME=\"$(STATIC_TARGET)-a\" -DTARGETTYPE=STATICLINK
+static_lib: $(STATIC_LIB_TARGET).a
+
+$(STATIC_LIB_TARGET).a: usb.22.o error.22.o descriptors.22.o windows.22.o install.22.o registry.22.o resource.2.o
+	$(AR) $(STATIC_ARFLAGS) $@ $^
+
+%.22.o: %.c libusb_driver.h driver_api.h error.h
+	$(CC) $(STATIC_CFLAGS) -c $< -o $@ $(CPPFLAGS) $(INCLUDES) 
+
 .PHONY: filter
 filter: FILTER_CFLAGS = $(CFLAGS) -DLOG_APPNAME=\"install-filter\" -DTARGETTYPE=PROGRAMconsole -DLOG_STYLE_SHORT
 filter: FILTER_LDFLAGS = -s -L. -lgdi32 -luser32 -lcfgmgr32 -lsetupapi
diff -Naur libusb-win32-src-1.2.6.0/src/driver/driver_api.h libusb-win32-src-1.2.6.0_fixed/src/driver/driver_api.h
--- libusb-win32-src-1.2.6.0/src/driver/driver_api.h	2011-07-23 21:11:26 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/driver/driver_api.h	2014-04-17 10:10:54 +0100
@@ -271,7 +271,9 @@
 } libusb_request;
 */
 
+#ifdef _MSC_VER
 #pragma warning(disable:4201)
+#endif
 
 typedef struct
 {
@@ -393,7 +395,10 @@
 		} control;
 	};
 } libusb_request;
+
+#ifdef _MSC_VER
 #pragma warning(default:4201)
+#endif
 
 #include <poppack.h>
 
diff -Naur libusb-win32-src-1.2.6.0/src/error.h libusb-win32-src-1.2.6.0_fixed/src/error.h
--- libusb-win32-src-1.2.6.0/src/error.h	2011-04-30 07:19:18.000000000 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/error.h	2016-01-08 15:44:04.337556400 +0000
@@ -22,6 +22,48 @@
 
 #include <stdarg.h>
 
+#if ((! defined(__MSYS__)))
+#include <conio.h>
+#else
+#define _vsnprintf vsnprintf
+#define _snprintf snprintf
+#define _strdup   strdup
+#define _getch    getch
+#define _endthread() ExitThread(0)
+#define _beginthread( a, b, c ) ((uintptr_t )CreateThread( NULL, b, (LPTHREAD_START_ROUTINE)a, c, 0, NULL))
+#define _beginthreadex(a, b, c, d, e, f) ((uintptr_t )CreateThread(a, b, (LPTHREAD_START_ROUTINE)c, d, e, f))
+#define _wcsicmp  wcscasecmp
+#define _wcsnicmp wcsncasecmp
+#define _strlwr(str)   {int i; for( i = 0; str[i]; i++){ str[i] = (char)tolower((int)str[i]); } }
+#define _stricmp   strcasecmp
+
+#include <unistd.h>
+#include <termios.h>
+#include <stdio.h>
+
+
+static inline char getch(){
+    char buf=0;
+    struct termios old={0};
+    fflush(stdout);
+    if(tcgetattr(0, &old)<0)
+        perror("tcsetattr()");
+    old.c_lflag&=~ICANON;
+    old.c_lflag&=~ECHO;
+    old.c_cc[VMIN]=1;
+    old.c_cc[VTIME]=0;
+    if(tcsetattr(0, TCSANOW, &old)<0)
+        perror("tcsetattr ICANON");
+    if(read(0,&buf,1)<0)
+        perror("read()");
+    old.c_lflag|=ICANON;
+    old.c_lflag|=ECHO;
+    if(tcsetattr(0, TCSADRAIN, &old)<0)
+        perror ("tcsetattr ~ICANON");
+    return buf;
+ }
+
+#endif /* ((! defined(__MSYS__))) */
 
 enum USB_LOG_LEVEL
 {
diff -Naur libusb-win32-src-1.2.6.0/src/install.c libusb-win32-src-1.2.6.0_fixed/src/install.c
--- libusb-win32-src-1.2.6.0/src/install.c	2011-10-28 14:34:08 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/install.c	2014-04-17 10:05:48 +0100
@@ -28,11 +28,10 @@
 #include <string.h>
 #include <process.h>
 #include <richedit.h>
-#include <conio.h>
 #include <ctype.h>
 
 #ifdef __GNUC__
-#if  defined(_WIN64)
+#if  defined(_WIN64) || defined (__MSYS__) || defined (__MINGW32__)
 #include <cfgmgr32.h>
 #else
 #include <ddk/cfgmgr32.h>
@@ -316,7 +315,6 @@
 static HINSTANCE riched32_dll = NULL;
 static HINSTANCE shell32_dll = NULL;
 static HINSTANCE msimg32_dll = NULL;
-static HINSTANCE gdi32_dll = NULL;
 
 static HINSTANCE advapi32_dll = NULL;
 
@@ -2062,7 +2060,7 @@
 	// set the color
 	cf.cbSize      = sizeof(CHARFORMAT);
 	cf.dwMask      = CFM_COLOR | CFM_UNDERLINE | CFM_BOLD;
-	cf.dwEffects   = (unsigned long)~(CFE_AUTOCOLOR | CFE_UNDERLINE | CFE_BOLD);
+	cf.dwEffects   = (DWORD)~(CFE_AUTOCOLOR | CFE_UNDERLINE | CFE_BOLD);
 	cf.crTextColor = crNewColor;
 
 	if (bold)
diff -Naur libusb-win32-src-1.2.6.0/src/install_filter_win.c libusb-win32-src-1.2.6.0_fixed/src/install_filter_win.c
--- libusb-win32-src-1.2.6.0/src/install_filter_win.c	2010-09-22 23:35:52.000000000 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/install_filter_win.c	2016-01-12 12:18:01.581740200 +0000
@@ -22,7 +22,7 @@
 #include <windows.h>
 
 #ifdef __GNUC__
-	#if  defined(_WIN64)
+	#if  defined(_WIN64) || defined (__MSYS__) || defined (__MINGW32__)
 		#include <cfgmgr32.h>
 	#else
 		#include <ddk/cfgmgr32.h>
diff -Naur libusb-win32-src-1.2.6.0/src/registry.c libusb-win32-src-1.2.6.0_fixed/src/registry.c
--- libusb-win32-src-1.2.6.0/src/registry.c	2010-09-23 17:40:50 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/registry.c	2014-04-17 10:05:39 +0100
@@ -25,7 +25,7 @@
 #include <string.h>
 
 #ifdef __GNUC__
-#if  defined(_WIN64)
+#if  defined(_WIN64) || defined (__MSYS__) || defined (__MINGW32__)
 #include <cfgmgr32.h>
 #else
 #include <ddk/cfgmgr32.h>
@@ -90,8 +90,6 @@
 {
 	DWORD reg_type;
 	DWORD length = size;
-	char *p = NULL;
-	HKEY reg_key = NULL;
 
 	memset(buf, 0, size);
 
@@ -567,15 +565,12 @@
 	SP_DEVINFO_DATA dev_info_data;
 	int dev_index = 0;
 	char hwid[MAX_PATH];
-	const char *driver_name;
 	filter_device_t* found;
 	bool_t is_libusb_service;
 
 	if (!filter_context->device_filters)
 		return TRUE;
 
-	driver_name = USB_GET_DRIVER_NAME();
-
 	dev_info_data.cbSize = sizeof(SP_DEVINFO_DATA);
 	dev_index = 0;
 
@@ -871,7 +866,7 @@
 		== ERROR_SUCCESS)
 	{
 		if (RegQueryValueEx(reg_key, value, NULL, &reg_type,
-			buf, &reg_length) == ERROR_SUCCESS)
+			(unsigned char*)buf, &reg_length) == ERROR_SUCCESS)
 		{
 			if (reg_type == REG_SZ)
 			{
@@ -928,7 +923,7 @@
 		{
 			if (usb_registry_is_nt())
 			{
-				if (RegSetValueEx(reg_key, value, 0, REG_MULTI_SZ, buf, size)
+				if (RegSetValueEx(reg_key, value, 0, REG_MULTI_SZ, (unsigned char*)buf, size)
 					== ERROR_SUCCESS)
 				{
 					ret = TRUE;
@@ -936,7 +931,7 @@
 			}
 			else
 			{
-				if (RegSetValueEx(reg_key, value, 0, REG_SZ, buf, size)
+				if (RegSetValueEx(reg_key, value, 0, REG_SZ, (unsigned char*)buf, size)
 					== ERROR_SUCCESS)
 				{
 					ret = TRUE;
@@ -1064,7 +1059,7 @@
 	}
 	while (1);
 
-	return TRUE;
+	return ret;
 }
 
 void usb_registry_mz_string_lower(char *src)
@@ -1286,7 +1281,6 @@
 	char class[MAX_PATH];
 	char class_name[MAX_PATH];
 	char tmp[MAX_PATH];
-	DWORD class_property;
 	const char *class_path;
 	const char **default_class_keys;
 	filter_class_t* found = NULL;
@@ -1295,7 +1289,6 @@
 	bool_t add_device_classes = FALSE;
 	bool_t success;
 
-	class_property = SPDRP_CLASSGUID;
 	class_path = CLASS_KEY_PATH_NT;
 	default_class_keys = default_class_keys_nt;
 	i = 0;
@@ -1432,7 +1425,7 @@
 					if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, tmp, 0, KEY_ALL_ACCESS, &reg_class_key) == ERROR_SUCCESS)
 					{
 						size = sizeof(class_name);
-						RegQueryValueExA(reg_class_key, "Class", NULL, &reg_type, class_name, &size);
+						RegQueryValueExA(reg_class_key, "Class", NULL, &reg_type, (unsigned char*)class_name, &size);
 
 						usb_registry_add_class_key(&filter_context->class_filters, tmp, class_name, class, &found,
 							(add_all_classes) ? FALSE : refresh_only);
@@ -1495,7 +1488,7 @@
 				if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, tmp, 0, KEY_ALL_ACCESS, &reg_class_key) == ERROR_SUCCESS)
 				{
 					size = sizeof(class_name);
-					RegQueryValueExA(reg_class_key, "Class", NULL, &reg_type, class_name, &size);
+					RegQueryValueExA(reg_class_key, "Class", NULL, &reg_type, (unsigned char*)class_name, &size);
 					RegCloseKey(reg_class_key);
 
 					usb_registry_add_class_key(head, tmp, class_name, class, &found, TRUE);
@@ -1637,13 +1630,13 @@
 
 	// Get the class filters. A non-existent key means no filters
 	size = sizeof(filter_class->class_uppers) - 1;
-	if (RegQueryValueExA(reg_class_hkey, "UpperFilters", NULL, &reg_type, filter_class->class_uppers, &size) != ERROR_SUCCESS)
+	if (RegQueryValueExA(reg_class_hkey, "UpperFilters", NULL, &reg_type, (unsigned char*)filter_class->class_uppers, &size) != ERROR_SUCCESS)
 	{
 		memset(filter_class->class_uppers, 0, sizeof(filter_class->class_uppers));
 	}
 
 	size = sizeof(filter_class->class_lowers) - 1;
-	if (RegQueryValueExA(reg_class_hkey, "LowerFilters", NULL, &reg_type, filter_class->class_lowers, &size) != ERROR_SUCCESS)
+	if (RegQueryValueExA(reg_class_hkey, "LowerFilters", NULL, &reg_type, (unsigned char*)filter_class->class_lowers, &size) != ERROR_SUCCESS)
 	{
 		memset(filter_class->class_lowers, 0, sizeof(filter_class->class_lowers));
 	}
diff -Naur libusb-win32-src-1.2.6.0/src/usbi.h libusb-win32-src-1.2.6.0_fixed/src/usbi.h
--- libusb-win32-src-1.2.6.0/src/usbi.h	2011-03-18 18:31:22.000000000 +0000
+++ libusb-win32-src-1.2.6.0_fixed/src/usbi.h	2016-01-08 15:13:35.431848400 +0000
@@ -5,9 +5,11 @@
 
 #include "error.h"
 
+#if ((! defined(__MSYS__)))
 typedef unsigned char uint8_t;
 typedef unsigned short uint16_t;
 typedef unsigned long uint32_t;
+#endif /* ((! defined(__MSYS__))) */
 
 extern int usb_debug;
 
diff -Naur libusb-win32-src-1.2.6.0/src/windows.c libusb-win32-src-1.2.6.0_fixed/src/windows.c
--- libusb-win32-src-1.2.6.0/src/windows.c	2011-07-12 07:26:00 +0100
+++ libusb-win32-src-1.2.6.0_fixed/src/windows.c	2014-04-17 10:05:28 +0100
@@ -83,7 +83,7 @@
 static void _usb_deinit(void);
 
 /* DLL main entry point */
-BOOL WINAPI DllMain(HANDLE module, DWORD reason, LPVOID reserved)
+BOOL WINAPI DllMain(HINSTANCE module, DWORD reason, LPVOID reserved)
 {
     switch (reason)
     {
