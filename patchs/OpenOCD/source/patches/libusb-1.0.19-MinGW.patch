diff -Naur libusb-1.0.18/config.h.in libusb-1.0.18_fixed/config.h.in
--- libusb-1.0.18/config.h.in	2014-01-25 23:06:59 +0000
+++ libusb-1.0.18_fixed/config.h.in	2015-02-09 15:33:42 +0000
@@ -1,7 +1,9 @@
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
+#include <sys/time.h>
+
 /* Default visibility */
-#undef DEFAULT_VISIBILITY
+#define DEFAULT_VISIBILITY
 
 /* Start with debug message logging enabled */
 #undef ENABLE_DEBUG_LOGGING
@@ -16,7 +18,7 @@
 #undef HAVE_DLFCN_H
 
 /* Define to 1 if you have the `gettimeofday' function. */
-#undef HAVE_GETTIMEOFDAY
+#define HAVE_GETTIMEOFDAY
 
 /* Define to 1 if you have the <inttypes.h> header file. */
 #undef HAVE_INTTYPES_H
@@ -98,7 +100,7 @@
 #undef OS_OPENBSD
 
 /* Windows backend */
-#undef OS_WINDOWS
+#define OS_WINDOWS
 
 /* Name of package */
 #undef PACKAGE
@@ -122,7 +124,7 @@
 #undef PACKAGE_VERSION
 
 /* type of second poll() argument */
-#undef POLL_NFDS_TYPE
+#define POLL_NFDS_TYPE unsigned int
 
 /* Define to 1 if you have the ANSI C header files. */
 #undef STDC_HEADERS
diff -Naur libusb-1.0.18/libusb/os/threads_windows.h libusb-1.0.18_fixed/libusb/os/threads_windows.h
--- libusb-1.0.18/libusb/os/threads_windows.h	2014-01-08 23:55:51 +0000
+++ libusb-1.0.18_fixed/libusb/os/threads_windows.h	2015-02-09 17:23:35 +0000
@@ -21,6 +21,8 @@
 #ifndef LIBUSB_THREADS_WINDOWS_H
 #define LIBUSB_THREADS_WINDOWS_H
 
+#include <unistd.h>  // Overcomes a bug with MinGW where timespec is defined in unistd.h (which configure accidentally detects, but which programs will not)
+
 #define usbi_mutex_static_t     volatile LONG
 #define USBI_MUTEX_INITIALIZER  0
 
diff -Naur libusb-1.0.18/libusb/os/windows_usb.c libusb-1.0.18_fixed/libusb/os/windows_usb.c
--- libusb-1.0.18/libusb/os/windows_usb.c	2014-01-08 23:55:51 +0000
+++ libusb-1.0.18_fixed/libusb/os/windows_usb.c	2015-02-09 15:33:42 +0000
@@ -3672,7 +3672,9 @@
 	int i, j;
 	// report IDs handling
 	ULONG size[3];
+#ifdef ENABLE_LOGGING
 	const char* type[3] = {"input", "output", "feature"};
+#endif
 	int nb_ids[2];	// zero and nonzero report IDs
 
 	CHECK_HID_AVAILABLE;
